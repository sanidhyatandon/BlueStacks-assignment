{"ast":null,"code":"var _jsxFileName = \"/Users/santando/xlbas-project/src/containers/Dashboard/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { LIVE, PAST, UPCOMING } from '../constants';\nimport apiConfig from '../../api.config';\nimport DashboardView from '../../components/Dashboard';\nimport Loader from '../../common/Loader';\nimport { checkDateStatus } from '../../common/utilities';\n\nconst FoodList = () => {\n  const [campaigns, setCampaigns] = useState({\n    upcoming: [],\n    live: [],\n    past: []\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    campaigns.forEach(campaign => {\n      const status = checkDateStatus(campaign.createdOn);\n\n      if (status === PAST) {\n        setCampaigns(data => {});\n      }\n    });\n  }, [campaigns]);\n  useEffect(() => {\n    setIsLoading(true);\n    const {\n      getCampaigns: {\n        url: getCampaignsURL\n      }\n    } = apiConfig;\n    fetch(getCampaignsURL).then(response => response.json()).then(data => {\n      setCampaigns(data);\n      setIsLoading(false);\n    }).catch(error => console.log(error));\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"campaign-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }\n  }, campaigns && campaigns.length ? /*#__PURE__*/React.createElement(DashboardView, {\n    data: campaigns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 38\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 75\n    }\n  }, \" No Data Available\")), isLoading && /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 18\n    }\n  }));\n};\n\nexport default FoodList;","map":{"version":3,"sources":["/Users/santando/xlbas-project/src/containers/Dashboard/index.js"],"names":["React","useState","useEffect","LIVE","PAST","UPCOMING","apiConfig","DashboardView","Loader","checkDateStatus","FoodList","campaigns","setCampaigns","upcoming","live","past","isLoading","setIsLoading","forEach","campaign","status","createdOn","data","getCampaigns","url","getCampaignsURL","fetch","then","response","json","catch","error","console","log","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,QAArB,QAAqC,cAArC;AAEA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,eAAT,QAAgC,wBAAhC;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACtB,QAAM,CAAEC,SAAF,EAAaC,YAAb,IAA8BX,QAAQ,CAAC;AAACY,IAAAA,QAAQ,EAAE,EAAX;AAAeC,IAAAA,IAAI,EAAE,EAArB;AAAyBC,IAAAA,IAAI,EAAE;AAA/B,GAAD,CAA5C;AACA,QAAM,CAAEC,SAAF,EAAaC,YAAb,IAA8BhB,QAAQ,CAAC,IAAD,CAA5C;AAEAC,EAAAA,SAAS,CACR,MAAM;AACLS,IAAAA,SAAS,CAACO,OAAV,CAAmBC,QAAD,IAAc;AACnB,YAAMC,MAAM,GAAGX,eAAe,CAACU,QAAQ,CAACE,SAAV,CAA9B;;AACA,UAAGD,MAAM,KAAKhB,IAAd,EAAoB;AAChBQ,QAAAA,YAAY,CAAEU,IAAD,IAAU,CAAE,CAAb,CAAZ;AACH;AACb,KALD;AAMA,GARO,EASR,CAAEX,SAAF,CATQ,CAAT;AAYAT,EAAAA,SAAS,CAAC,MAAM;AACfe,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAM;AAAEM,MAAAA,YAAY,EAAE;AAAEC,QAAAA,GAAG,EAAEC;AAAP;AAAhB,QAA6CnB,SAAnD;AACAoB,IAAAA,KAAK,CAACD,eAAD,CAAL,CACEE,IADF,CACQC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADrB,EAEEF,IAFF,CAEQL,IAAD,IAAU;AACfV,MAAAA,YAAY,CAACU,IAAD,CAAZ;AACAL,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACA,KALF,EAMEa,KANF,CAMSC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CANnB;AAOA,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEpB,SAAS,IAAIA,SAAS,CAACuB,MAAvB,gBAAgC,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAEvB,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhC,gBAAqE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADvE,CADD,EAIEK,SAAS,iBAAI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJf,CADD;AAQA,CApCD;;AAsCA,eAAeN,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { LIVE, PAST, UPCOMING } from '../constants';\n\nimport apiConfig from '../../api.config';\nimport DashboardView from '../../components/Dashboard';\n\nimport Loader from '../../common/Loader';\nimport { checkDateStatus } from '../../common/utilities';\n\nconst FoodList = () => {\n\tconst [ campaigns, setCampaigns ] = useState({upcoming: [], live: [], past: []});\n\tconst [ isLoading, setIsLoading ] = useState(true);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tcampaigns.forEach((campaign) => {\n                const status = checkDateStatus(campaign.createdOn);\n                if(status === PAST) {\n                    setCampaigns((data) => {});\n                }\n\t\t\t});\n\t\t},\n\t\t[ campaigns ]\n\t);\n\n\tuseEffect(() => {\n\t\tsetIsLoading(true);\n\t\tconst { getCampaigns: { url: getCampaignsURL } } = apiConfig;\n\t\tfetch(getCampaignsURL)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tsetCampaigns(data);\n\t\t\t\tsetIsLoading(false);\n\t\t\t})\n\t\t\t.catch((error) => console.log(error));\n\t}, []);\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"campaign-list\">\n\t\t\t\t{campaigns && campaigns.length ? <DashboardView data={campaigns} /> : <div> No Data Available</div>}\n\t\t\t</div>\n\t\t\t{isLoading && <Loader />}\n\t\t</div>\n\t);\n};\n\nexport default FoodList;\n"]},"metadata":{},"sourceType":"module"}