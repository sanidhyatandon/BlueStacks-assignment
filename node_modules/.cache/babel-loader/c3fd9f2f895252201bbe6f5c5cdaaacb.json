{"ast":null,"code":"var _jsxFileName = \"/Users/santando/xlbas-project/src/containers/Dashboard/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport apiConfig from '../../api.config';\nimport DashboardView from '../../components/Dashboard';\nimport Loader from '../../common/Loader';\nimport { checkDateStatus } from '../../common/utilities';\n\nconst FoodList = () => {\n  const [campaigns, setCampaigns] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const liveCampaigns = campaigns.filter(campaign => checkDateStatus(campaign.createdOn) === LIVE);\n    const pastCampaigns = campaigns.filter(campaign => checkDateStatus(campaign.createdOn) === PAST);\n    const upcomingCampaigns = campaigns.filter(campaign => checkDateStatus(campaign.createdOn) === UPCOMING);\n  }, [campaigns]);\n  useEffect(() => {\n    setIsLoading(true);\n    const {\n      getCampaigns: {\n        url: getCampaignsURL\n      }\n    } = apiConfig;\n    fetch(getCampaignsURL).then(response => response.json()).then(data => {\n      setCampaigns(data);\n      setIsLoading(false);\n    }).catch(error => console.log(error));\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"campaign-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, campaigns && campaigns.length ? /*#__PURE__*/React.createElement(DashboardView, {\n    data: campaigns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 42\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 79\n    }\n  }, \" No Data Available\")), isLoading && /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }));\n};\n\nexport default FoodList;","map":{"version":3,"sources":["/Users/santando/xlbas-project/src/containers/Dashboard/index.js"],"names":["React","useState","useEffect","apiConfig","DashboardView","Loader","checkDateStatus","FoodList","campaigns","setCampaigns","isLoading","setIsLoading","liveCampaigns","filter","campaign","createdOn","LIVE","pastCampaigns","PAST","upcomingCampaigns","UPCOMING","getCampaigns","url","getCampaignsURL","fetch","then","response","json","data","catch","error","console","log","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,eAAT,QAAgC,wBAAhC;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,IAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,aAAa,GAAGJ,SAAS,CAACK,MAAV,CAAiBC,QAAQ,IAAIR,eAAe,CAACQ,QAAQ,CAACC,SAAV,CAAf,KAAwCC,IAArE,CAAtB;AACA,UAAMC,aAAa,GAAGT,SAAS,CAACK,MAAV,CAAiBC,QAAQ,IAAIR,eAAe,CAACQ,QAAQ,CAACC,SAAV,CAAf,KAAwCG,IAArE,CAAtB;AACA,UAAMC,iBAAiB,GAAGX,SAAS,CAACK,MAAV,CAAiBC,QAAQ,IAAIR,eAAe,CAACQ,QAAQ,CAACC,SAAV,CAAf,KAAwCK,QAArE,CAA1B;AAED,GALQ,EAKN,CAACZ,SAAD,CALM,CAAT;AAOAN,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAM;AACJU,MAAAA,YAAY,EAAE;AAAEC,QAAAA,GAAG,EAAEC;AAAP;AADV,QAEFpB,SAFJ;AAGAqB,IAAAA,KAAK,CAACD,eAAD,CAAL,CACGE,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZnB,MAAAA,YAAY,CAACmB,IAAD,CAAZ;AACAjB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KALH,EAMGkB,KANH,CAMSC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CANlB;AAOD,GAZQ,EAYN,EAZM,CAAT;AAcA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGtB,SAAS,IAAIA,SAAS,CAACyB,MAAvB,gBAAgC,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAEzB,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhC,gBAAqE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADxE,CADF,EAIGE,SAAS,iBAAI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJhB,CADF;AAQD,CAjCD;;AAmCA,eAAeH,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport apiConfig from '../../api.config';\nimport DashboardView from '../../components/Dashboard';\n\nimport Loader from '../../common/Loader';\nimport { checkDateStatus } from '../../common/utilities';\n\nconst FoodList = () => {\n  const [campaigns, setCampaigns] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const liveCampaigns = campaigns.filter(campaign => checkDateStatus(campaign.createdOn) === LIVE);\n    const pastCampaigns = campaigns.filter(campaign => checkDateStatus(campaign.createdOn) === PAST);\n    const upcomingCampaigns = campaigns.filter(campaign => checkDateStatus(campaign.createdOn) === UPCOMING);\n\n  }, [campaigns]);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const {\n      getCampaigns: { url: getCampaignsURL }\n    } = apiConfig;\n    fetch(getCampaignsURL)\n      .then(response => response.json())\n      .then(data => {\n        setCampaigns(data);\n        setIsLoading(false);\n      })\n      .catch(error => console.log(error));\n  }, []);\n\n  return (\n    <div>\n      <div className=\"campaign-list\">\n        {campaigns && campaigns.length ? <DashboardView data={campaigns} /> : <div> No Data Available</div>}\n      </div>\n      {isLoading && <Loader />}\n    </div>\n  );\n};\n\nexport default FoodList;\n"]},"metadata":{},"sourceType":"module"}