{"ast":null,"code":"var _jsxFileName = \"/Users/santando/xlbas-project/src/common/Table/index.js\";\n\n/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport './table.css';\nconst NO_DATA_STATE = '-';\n/**\n * This function return the alignment property based on the prop coming\n * @memberof TableHeader\n * @param {string} Alignment property coming in props\n * @param {number} index\n * @returns {string} Alignment property\n */\n\nconst setAlignment = (aligmentProp, index) => {\n  let align = 'left';\n\n  if (aligmentProp === 'default' && index !== 0) {\n    align = 'right';\n  }\n\n  if (aligmentProp === 'right') {\n    align = 'right';\n  }\n\n  if (aligmentProp === 'center') {\n    align = 'center';\n  }\n\n  return align;\n};\n/**\n * TableCell component contains native td tag implementation with some classes to handle the padding horizontally/vertically\n * DataNot Available state can also be handled.\n * @class\n * @param {TableCell~propTypes} props - TableCell props.\n * @returns {ReactElement}\n */\n\n\nconst TableCell = props => {\n  const {\n    cellData,\n    children,\n    className,\n    width,\n    paddingLevelY,\n    paddingLevelX,\n    showNoDataState,\n    desktop,\n    mobile,\n    ...otherProps\n  } = props;\n  const tableCellClasses = classnames('table-cell', `py-${paddingLevelY}x`, `px-${paddingLevelX}x`, className);\n  return /*#__PURE__*/React.createElement(\"td\", Object.assign({\n    className: tableCellClasses,\n    style: {\n      minWidth: width,\n      width\n    }\n  }, otherProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 3\n    }\n  }), children || cellData || showNoDataState && NO_DATA_STATE);\n};\n/**\n * Complete props of TableCell.\n * @typedef {Object} TableCell~propTypes\n * @property {(string|node)} [cellData=''] This hold the data/node to be displayed on the cell.\n * @property {string} [className=''] className for the TableCell.\n * @property {string} [width='auto'] width for the Table Cell.\n * @property {number} [paddingLevelY=2] paddingLevelY for the tabelCell.\n * @property {number} [paddingLevelX=0] paddingLevelX for the tabelCell.\n * @property {bool} [showNoDataState=true] Flag for the no Data State.\n * @property {(string|node)} [children=null] children for the Table Cell.\n * @property {bool} [mobile=false] - to be displayed only on mobile.\n * @property {bool} [desktop=false] - to be displayed only on desktop.\n */\n\n\nTableCell.propTypes = {\n  cellData: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  className: PropTypes.string,\n  width: PropTypes.string,\n  paddingLevelY: PropTypes.number,\n  paddingLevelX: PropTypes.number,\n  showNoDataState: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  mobile: PropTypes.bool,\n  desktop: PropTypes.bool\n};\nTableCell.defaultProps = {\n  cellData: '',\n  className: '',\n  width: 'auto',\n  children: null,\n  showNoDataState: true,\n  paddingLevelY: 2,\n  paddingLevelX: 0,\n  mobile: false,\n  desktop: false\n};\n/**\n * This component is responsible to render the TableRow component, this is a default TableRow called\n * from the Table Component. default Columns can either be created from data or with rowProps.\n * @class\n * @param {TableRow~propTypes} props - TableRow props.\n * @returns {ReactElement}\n */\n\nconst TableRow = props => {\n  const {\n    rowData,\n    children,\n    className,\n    tableCellClassName,\n    columnAlignment,\n    rowProps: {\n      columns\n    },\n    ...otherProps\n  } = props;\n  const tableRowClasses = classnames('table-row', className);\n  const allChild = React.Children.toArray(children);\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    className: tableRowClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 3\n    }\n  }, children && allChild.map(child => React.cloneElement(child, { ...otherProps\n  })) || (columns && columns.length ? columns.map(({\n    key,\n    ...htmlProps\n  }, index) => key && /*#__PURE__*/React.createElement(TableCell, Object.assign({\n    cellData: rowData[key],\n    key: `cell-${index}`,\n    align: setAlignment(columnAlignment, index),\n    className: tableCellClassName\n  }, otherProps, htmlProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 10\n    }\n  }))) : Object.values(rowData).map((celldata, index) => /*#__PURE__*/React.createElement(TableCell, Object.assign({\n    cellData: celldata,\n    key: `cell-${index}`,\n    className: tableCellClassName\n  }, otherProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 8\n    }\n  })))));\n};\n/**\n * Complete props of TableRow.\n * @typedef {Object} TableRow~propTypes\n * @property {Object} [rowData={}] This hold the rowData for the Row.\n * @property {string} [className=''] ClassName for the TableRow.\n * @property {string} [tableCellClassName = ''] tableCellClassName for table cell.\n * @property {string} columnAlignment columnAlignment for table cell.\n * @property {Object} [rowProps = {}] rowProps object for the TableRow.\n * @property {(string|node)} [children = null] Children for the Table Row.\n */\n\n\nTableRow.propTypes = {\n  rowData: PropTypes.instanceOf(Object),\n  className: PropTypes.string,\n  tableCellClassName: PropTypes.string,\n  columnAlignment: PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  rowProps: PropTypes.shape({\n    columns: PropTypes.arrayOf(PropTypes.instanceOf(Object))\n  })\n};\nTableRow.defaultProps = {\n  rowData: {},\n  className: '',\n  columnAlignment: 'default',\n  tableCellClassName: '',\n  children: null,\n  rowProps: {\n    columns: []\n  }\n};\n/**\n * TableHeaderCell component contains native th tag implementation, which can also be called from a custom Header component.\n * Sorting can also be added with headers passed as config.\n * @class\n * @param {TableHeaderCell~propTypes} props - TableHeaderCell props.\n * @returns {ReactElement}\n */\n\nconst TableHeaderCell = props => {\n  const {\n    headerCelldata,\n    children,\n    paddingLevelHeaderY,\n    paddingLevelHeaderX,\n    className,\n    sortMethod,\n    activeSort,\n    desktop,\n    mobile,\n    ...otherProps\n  } = props; // Return blank if not meeting device requirements\n\n  if (desktop && isMobileDevice()) return null;\n  if (mobile && !isMobileDevice()) return null;\n  const headerClasses = classnames('table-header-cell', `py-${paddingLevelHeaderY}x`, `px-${paddingLevelHeaderX}x`, className);\n  let headerLabel = headerCelldata;\n  let key;\n  let htmlProps = {};\n  const sortProps = {};\n\n  if (typeof headerLabel === 'object') {\n    const {\n      label,\n      sortKey,\n      desc,\n      ...remProps\n    } = headerCelldata;\n    htmlProps = remProps;\n    headerLabel = label;\n\n    if (sortKey) {\n      sortProps.onClick = () => sortMethod(sortKey, desc);\n\n      key = sortKey;\n    }\n  }\n\n  return headerLabel !== null && /*#__PURE__*/React.createElement(\"th\", Object.assign({\n    className: headerClasses\n  }, otherProps, htmlProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 4\n    }\n  }), children || headerLabel);\n};\n/**\n * Complete props of TableHeaderCell.\n * @typedef {Object} TableHeaderCell~propTypes\n * @property {Object|string} [headerCelldata=''] This hold headerCelldata for the headerCell.\n * @property {string} [className=''] ClassName for TableHeader cell.\n * @property {string} [activeSort='' ] Active Sort.\n * @property {func} [sortMethod=()=>{}] function for Active Sort.\n * @property {(string|node)} [children=null] Children for the Table Row.\n * @property {number} [paddingLevelHeaderY=1] paddingLevelHeaderY for the TableHeaderCell.\n * @property {number} [paddingLevelHeaderX=0] paddingLevelHeaderX for the TableHeaderCell.\n * @property {bool} [mobile=false] - to be displayed only on mobile.\n * @property {bool} [desktop=false] - to be displayed only on desktop.\n */\n\n\nTableHeaderCell.propTypes = {\n  headerCelldata: PropTypes.oneOfType([PropTypes.string, PropTypes.shape({\n    label: PropTypes.string.isRequired\n  })]),\n  className: PropTypes.string,\n  paddingLevelHeaderY: PropTypes.number,\n  paddingLevelHeaderX: PropTypes.number,\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  sortMethod: PropTypes.func,\n  activeSort: PropTypes.string,\n  mobile: PropTypes.bool,\n  desktop: PropTypes.bool\n};\nTableHeaderCell.defaultProps = {\n  headerCelldata: '',\n  className: '',\n  paddingLevelHeaderY: 1,\n  paddingLevelHeaderX: 0,\n  children: null,\n  sortMethod: () => {},\n  activeSort: '',\n  mobile: false,\n  desktop: false\n};\n/**\n * TableHeader component contains native tr tag implementation and is generally a Default Header component which renders the Header for the Table.\n * @class\n * @param {TableHeader~propTypes} props - TableHeader props.\n * @returns {ReactElement}\n */\n\nconst TableHeader = props => {\n  const {\n    header,\n    children,\n    className,\n    columnAlignment,\n    tableHeaderCellClassName,\n    ...otherProps\n  } = props;\n  const tableHeaderClasses = classnames('table-header', className);\n  const allChild = React.Children.toArray(children);\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    className: tableHeaderClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 3\n    }\n  }, children && allChild.map(child => React.cloneElement(child, { ...otherProps\n  })) || header.map((headerCelldata, idx) => /*#__PURE__*/React.createElement(TableHeaderCell, Object.assign({\n    headerCelldata: headerCelldata,\n    key: `header-cell-${idx}`,\n    align: setAlignment(columnAlignment, idx),\n    className: tableHeaderCellClassName\n  }, otherProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 6\n    }\n  }))));\n};\n/**\n * Complete props of TableHeader.\n * @typedef {Object} TableHeader~propTypes\n *\n * @property {(string[]|Object[])} [header=[]] This is data for the tableHeader.\n * @property {string} [className=''] ClassName for TableHeader cell.\n * @property {string} [tableHeaderCellClassName=''] tableHeaderCellClassName.\n * @property {(string|node)} [children=null] Children for the Table Row.\n */\n\n\nTableHeader.propTypes = {\n  header: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Object)])),\n  className: PropTypes.string,\n  tableHeaderCellClassName: PropTypes.string,\n  columnAlignment: PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.node])\n};\nTableHeader.defaultProps = {\n  header: [],\n  className: '',\n  columnAlignment: 'default',\n  tableHeaderCellClassName: '',\n  children: null\n};\n/**\n * Table component is creating a table with defined header and data rows.\n * It consumes different components like TableHeader, TableRow and TableCell which can either be custom or default.\n * Supports sorting as well.\n * @class\n * @param {Table~propTypes} props - Table props.\n * @returns {ReactElement}\n */\n\nconst Table = props => {\n  const {\n    rowsData,\n    header,\n    customRow,\n    customHeader,\n    noBorder,\n    noLastBorder,\n    tableClassName,\n    tableHeaderClassName,\n    tableHeaderCellClassName,\n    tableRowClassName,\n    tableBodyClassName,\n    tableBodySize,\n    tableHeaderSize,\n    rowProps,\n    showNoDataState,\n    tableCellClassName,\n    paddingLevelHeaderX,\n    paddingLevelHeaderY,\n    paddingLevelX,\n    paddingLevelY,\n    ...otherProps\n  } = props;\n  const RowComponent = customRow || TableRow;\n  const HeaderComponent = customHeader || TableHeader;\n  const tableClasses = classnames('default-table', noBorder && 'no-border', noLastBorder && 'no-last-border', tableClassName);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: tableClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 4\n    }\n  }, header && /*#__PURE__*/React.createElement(\"thead\", {\n    className: classnames('table-head', `table-head-${tableHeaderSize}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(HeaderComponent, Object.assign({\n    header: header,\n    className: tableHeaderClassName,\n    tableHeaderCellClassName: tableHeaderCellClassName,\n    paddingLevelHeaderX: paddingLevelHeaderX,\n    paddingLevelHeaderY: paddingLevelHeaderY\n  }, otherProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 7\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    className: classnames('table-body', tableBodyClassName, `table-body-${tableBodySize}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 5\n    }\n  }, rowsData.map((rowData, index) => /*#__PURE__*/React.createElement(RowComponent, Object.assign({\n    rowData: rowData,\n    key: `row-${index}`,\n    className: tableRowClassName,\n    rowProps: rowProps,\n    showNoDataState: showNoDataState,\n    tableCellClassName: tableCellClassName,\n    paddingLevelX: paddingLevelX,\n    paddingLevelY: paddingLevelY\n  }, otherProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 7\n    }\n  }))))));\n};\n/**\n * Complete props of Table.\n * @typedef {Object} Table~propTypes\n *\n * @property {rowsData} - This is rowsData for the table.\n * @property {(string[]|Object[])} [header=null] Header as array of string or object.\n * @property {func} [customRow=null] CustomRow Component..\n * @property {func} [customHeader=null] CustomeHeader Component.\n * @property {bool} [noBorder=false] Flag for NoBorder variant.\n * @property {bool} [showNoDataState=false] Flag for NoData State.\n * @property {number} [paddingLevelHeaderY=1] PaddingLevelY for the TableHeaderCell.\n * @property {number} [paddingLevelHeaderX=0] PaddingLevelX for the TableHeaderCell.\n * @property {number} [paddingLevelY=2] PaddingLevelY for the TableBodyCell.\n * @property {number} [paddingLevelX=0] PaddingLevelX for the TableBodyCell.\n * @property {string} [tableClassName=''] This variable is used to override the default table styling.\n * @property {string} [tableHeaderClassName=''] This variable is used to override the default table header styling.\n * @property {string} [tableHeaderCellClassName=''] This variable is used to override the default table header cell styling.\n * @property {string} [tableRowClassName=''] This variable is used to override the default table row styling.\n * @property {string} [tableCellClassName=''] This variable is used to override the default table cell styling.\n * @property {string} [tableBodyClassName=''] This variable is used to override the default table body styling.\n * @property {bool} [noLastBorder=false] Flag for no last border variant.\n * @property {('small'|'medium'|'large')} [tableHeaderSize='medium'] This is used to set the size for Header.\n * @property {('default'|'left'|'right'|'center')} [columnAlignment='default'] This is used to set the alignment for each column.\n * @property {('small'|'medium'|'large')}  [tableBodySize='medium'] This is used to set the size for body content.\n * @property {object} [rowProps={}] Custom rows props for the rows.\n * @property {object} [columns=[]] Columns props for the rows\n */\n\n\nTable.propTypes = {\n  rowsData: PropTypes.arrayOf(PropTypes.instanceOf(Object)).isRequired,\n  header: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Object)])),\n  customRow: PropTypes.func,\n  customHeader: PropTypes.func,\n  noBorder: PropTypes.bool,\n  showNoDataState: PropTypes.bool,\n  paddingLevelHeaderY: PropTypes.number,\n  paddingLevelHeaderX: PropTypes.number,\n  paddingLevelY: PropTypes.number,\n  paddingLevelX: PropTypes.number,\n  tableClassName: PropTypes.string,\n  tableHeaderClassName: PropTypes.string,\n  tableHeaderCellClassName: PropTypes.string,\n  tableRowClassName: PropTypes.string,\n  tableCellClassName: PropTypes.string,\n  tableBodyClassName: PropTypes.string,\n  noLastBorder: PropTypes.bool,\n  tableHeaderSize: PropTypes.oneOf(['small', 'medium', 'large']),\n  columnAlignment: PropTypes.oneOf(['default', 'left', 'right', 'center']),\n  tableBodySize: PropTypes.oneOf(['small', 'medium', 'large']),\n  rowProps: PropTypes.shape({\n    columns: PropTypes.arrayOf(PropTypes.instanceOf(Object))\n  })\n};\nTable.defaultProps = {\n  header: null,\n  customRow: null,\n  customHeader: null,\n  noBorder: false,\n  showNoDataState: true,\n  paddingLevelHeaderY: 1,\n  paddingLevelHeaderX: 0,\n  paddingLevelY: 2,\n  paddingLevelX: 0,\n  tableClassName: '',\n  tableHeaderClassName: '',\n  tableHeaderCellClassName: '',\n  tableRowClassName: '',\n  tableCellClassName: '',\n  tableBodyClassName: '',\n  noLastBorder: false,\n  tableHeaderSize: 'medium',\n  tableBodySize: 'medium',\n  columnAlignment: 'default',\n  rowProps: {\n    columns: []\n  }\n};\nexport { Table, TableHeader, TableHeaderCell, TableRow, TableCell };","map":{"version":3,"sources":["/Users/santando/xlbas-project/src/common/Table/index.js"],"names":["React","classnames","PropTypes","NO_DATA_STATE","setAlignment","aligmentProp","index","align","TableCell","props","cellData","children","className","width","paddingLevelY","paddingLevelX","showNoDataState","desktop","mobile","otherProps","tableCellClasses","minWidth","propTypes","oneOfType","string","node","number","bool","defaultProps","TableRow","rowData","tableCellClassName","columnAlignment","rowProps","columns","tableRowClasses","allChild","Children","toArray","map","child","cloneElement","length","key","htmlProps","Object","values","celldata","instanceOf","shape","arrayOf","TableHeaderCell","headerCelldata","paddingLevelHeaderY","paddingLevelHeaderX","sortMethod","activeSort","isMobileDevice","headerClasses","headerLabel","sortProps","label","sortKey","desc","remProps","onClick","isRequired","func","TableHeader","header","tableHeaderCellClassName","tableHeaderClasses","idx","Table","rowsData","customRow","customHeader","noBorder","noLastBorder","tableClassName","tableHeaderClassName","tableRowClassName","tableBodyClassName","tableBodySize","tableHeaderSize","RowComponent","HeaderComponent","tableClasses","oneOf"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport './table.css';\n\nconst NO_DATA_STATE = '-';\n\n/**\n * This function return the alignment property based on the prop coming\n * @memberof TableHeader\n * @param {string} Alignment property coming in props\n * @param {number} index\n * @returns {string} Alignment property\n */\nconst setAlignment = (aligmentProp, index) => {\n\tlet align = 'left';\n\tif (aligmentProp === 'default' && index !== 0) {\n\t\talign = 'right';\n\t}\n\n\tif (aligmentProp === 'right') {\n\t\talign = 'right';\n\t}\n\n\tif (aligmentProp === 'center') {\n\t\talign = 'center';\n\t}\n\n\treturn align;\n};\n\n/**\n * TableCell component contains native td tag implementation with some classes to handle the padding horizontally/vertically\n * DataNot Available state can also be handled.\n * @class\n * @param {TableCell~propTypes} props - TableCell props.\n * @returns {ReactElement}\n */\nconst TableCell = (props) => {\n\tconst {\n\t\tcellData,\n\t\tchildren,\n\t\tclassName,\n\t\twidth,\n\t\tpaddingLevelY,\n\t\tpaddingLevelX,\n\t\tshowNoDataState,\n\t\tdesktop,\n\t\tmobile,\n\t\t...otherProps\n\t} = props;\n\n\n\tconst tableCellClasses = classnames('table-cell', `py-${paddingLevelY}x`, `px-${paddingLevelX}x`, className);\n\treturn (\n\t\t<td className={tableCellClasses} style={{ minWidth: width, width }} {...otherProps}>\n\t\t\t{children || cellData || (showNoDataState && NO_DATA_STATE)}\n\t\t</td>\n\t);\n};\n\n/**\n * Complete props of TableCell.\n * @typedef {Object} TableCell~propTypes\n * @property {(string|node)} [cellData=''] This hold the data/node to be displayed on the cell.\n * @property {string} [className=''] className for the TableCell.\n * @property {string} [width='auto'] width for the Table Cell.\n * @property {number} [paddingLevelY=2] paddingLevelY for the tabelCell.\n * @property {number} [paddingLevelX=0] paddingLevelX for the tabelCell.\n * @property {bool} [showNoDataState=true] Flag for the no Data State.\n * @property {(string|node)} [children=null] children for the Table Cell.\n * @property {bool} [mobile=false] - to be displayed only on mobile.\n * @property {bool} [desktop=false] - to be displayed only on desktop.\n */\nTableCell.propTypes = {\n\tcellData: PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]),\n\tclassName: PropTypes.string,\n\twidth: PropTypes.string,\n\tpaddingLevelY: PropTypes.number,\n\tpaddingLevelX: PropTypes.number,\n\tshowNoDataState: PropTypes.bool,\n\tchildren: PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]),\n\tmobile: PropTypes.bool,\n\tdesktop: PropTypes.bool\n};\n\nTableCell.defaultProps = {\n\tcellData: '',\n\tclassName: '',\n\twidth: 'auto',\n\tchildren: null,\n\tshowNoDataState: true,\n\tpaddingLevelY: 2,\n\tpaddingLevelX: 0,\n\tmobile: false,\n\tdesktop: false\n};\n\n/**\n * This component is responsible to render the TableRow component, this is a default TableRow called\n * from the Table Component. default Columns can either be created from data or with rowProps.\n * @class\n * @param {TableRow~propTypes} props - TableRow props.\n * @returns {ReactElement}\n */\nconst TableRow = (props) => {\n\tconst {\n\t\trowData,\n\t\tchildren,\n\t\tclassName,\n\t\ttableCellClassName,\n\t\tcolumnAlignment,\n\t\trowProps: { columns },\n\t\t...otherProps\n\t} = props;\n\tconst tableRowClasses = classnames('table-row', className);\n\tconst allChild = React.Children.toArray(children);\n\n\treturn (\n\t\t<tr className={tableRowClasses}>\n\t\t\t{(children && allChild.map((child) => React.cloneElement(child, { ...otherProps }))) ||\n\t\t\t\t(columns && columns.length\n\t\t\t\t\t? columns.map(\n\t\t\t\t\t\t\t({ key, ...htmlProps }, index) =>\n\t\t\t\t\t\t\t\tkey && (\n\t\t\t\t\t\t\t\t\t<TableCell\n\t\t\t\t\t\t\t\t\t\tcellData={rowData[key]}\n\t\t\t\t\t\t\t\t\t\tkey={`cell-${index}`}\n\t\t\t\t\t\t\t\t\t\talign={setAlignment(columnAlignment, index)}\n\t\t\t\t\t\t\t\t\t\tclassName={tableCellClassName}\n\t\t\t\t\t\t\t\t\t\t{...otherProps}\n\t\t\t\t\t\t\t\t\t\t{...htmlProps}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t: Object.values(rowData).map((celldata, index) => (\n\t\t\t\t\t\t\t<TableCell\n\t\t\t\t\t\t\t\tcellData={celldata}\n\t\t\t\t\t\t\t\tkey={`cell-${index}`}\n\t\t\t\t\t\t\t\tclassName={tableCellClassName}\n\t\t\t\t\t\t\t\t{...otherProps}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)))}\n\t\t</tr>\n\t);\n};\n\n/**\n * Complete props of TableRow.\n * @typedef {Object} TableRow~propTypes\n * @property {Object} [rowData={}] This hold the rowData for the Row.\n * @property {string} [className=''] ClassName for the TableRow.\n * @property {string} [tableCellClassName = ''] tableCellClassName for table cell.\n * @property {string} columnAlignment columnAlignment for table cell.\n * @property {Object} [rowProps = {}] rowProps object for the TableRow.\n * @property {(string|node)} [children = null] Children for the Table Row.\n */\nTableRow.propTypes = {\n\trowData: PropTypes.instanceOf(Object),\n\tclassName: PropTypes.string,\n\ttableCellClassName: PropTypes.string,\n\tcolumnAlignment: PropTypes.string,\n\tchildren: PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]),\n\trowProps: PropTypes.shape({\n\t\tcolumns: PropTypes.arrayOf(PropTypes.instanceOf(Object))\n\t})\n};\n\nTableRow.defaultProps = {\n\trowData: {},\n\tclassName: '',\n\tcolumnAlignment: 'default',\n\ttableCellClassName: '',\n\tchildren: null,\n\trowProps: {\n\t\tcolumns: []\n\t}\n};\n\n/**\n * TableHeaderCell component contains native th tag implementation, which can also be called from a custom Header component.\n * Sorting can also be added with headers passed as config.\n * @class\n * @param {TableHeaderCell~propTypes} props - TableHeaderCell props.\n * @returns {ReactElement}\n */\nconst TableHeaderCell = (props) => {\n\tconst {\n\t\theaderCelldata,\n\t\tchildren,\n\t\tpaddingLevelHeaderY,\n\t\tpaddingLevelHeaderX,\n\t\tclassName,\n\t\tsortMethod,\n\t\tactiveSort,\n\t\tdesktop,\n\t\tmobile,\n\t\t...otherProps\n\t} = props;\n\n\t// Return blank if not meeting device requirements\n\tif (desktop && isMobileDevice()) return null;\n\tif (mobile && !isMobileDevice()) return null;\n\n\tconst headerClasses = classnames(\n\t\t'table-header-cell',\n\t\t`py-${paddingLevelHeaderY}x`,\n\t\t`px-${paddingLevelHeaderX}x`,\n\t\tclassName\n\t);\n\tlet headerLabel = headerCelldata;\n\tlet key;\n\tlet htmlProps = {};\n\tconst sortProps = {};\n\tif (typeof headerLabel === 'object') {\n\t\tconst { label, sortKey, desc, ...remProps } = headerCelldata;\n\t\thtmlProps = remProps;\n\t\theaderLabel = label;\n\t\tif (sortKey) {\n\t\t\tsortProps.onClick = () => sortMethod(sortKey, desc);\n\t\t\tkey = sortKey;\n\t\t}\n\t}\n\treturn (\n\t\theaderLabel !== null && (\n\t\t\t<th className={headerClasses} {...otherProps} {...htmlProps}>\n\t\t\t\t{children || headerLabel}\n\t\t\t</th>\n\t\t)\n\t);\n};\n\n/**\n * Complete props of TableHeaderCell.\n * @typedef {Object} TableHeaderCell~propTypes\n * @property {Object|string} [headerCelldata=''] This hold headerCelldata for the headerCell.\n * @property {string} [className=''] ClassName for TableHeader cell.\n * @property {string} [activeSort='' ] Active Sort.\n * @property {func} [sortMethod=()=>{}] function for Active Sort.\n * @property {(string|node)} [children=null] Children for the Table Row.\n * @property {number} [paddingLevelHeaderY=1] paddingLevelHeaderY for the TableHeaderCell.\n * @property {number} [paddingLevelHeaderX=0] paddingLevelHeaderX for the TableHeaderCell.\n * @property {bool} [mobile=false] - to be displayed only on mobile.\n * @property {bool} [desktop=false] - to be displayed only on desktop.\n */\nTableHeaderCell.propTypes = {\n\theaderCelldata: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.shape({\n\t\t\tlabel: PropTypes.string.isRequired\n\t\t})\n\t]),\n\tclassName: PropTypes.string,\n\tpaddingLevelHeaderY: PropTypes.number,\n\tpaddingLevelHeaderX: PropTypes.number,\n\tchildren: PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]),\n\tsortMethod: PropTypes.func,\n\tactiveSort: PropTypes.string,\n\tmobile: PropTypes.bool,\n\tdesktop: PropTypes.bool\n};\n\nTableHeaderCell.defaultProps = {\n\theaderCelldata: '',\n\tclassName: '',\n\tpaddingLevelHeaderY: 1,\n\tpaddingLevelHeaderX: 0,\n\tchildren: null,\n\tsortMethod: () => {},\n\tactiveSort: '',\n\tmobile: false,\n\tdesktop: false\n};\n\n/**\n * TableHeader component contains native tr tag implementation and is generally a Default Header component which renders the Header for the Table.\n * @class\n * @param {TableHeader~propTypes} props - TableHeader props.\n * @returns {ReactElement}\n */\nconst TableHeader = (props) => {\n\tconst { header, children, className, columnAlignment, tableHeaderCellClassName, ...otherProps } = props;\n\tconst tableHeaderClasses = classnames('table-header', className);\n\tconst allChild = React.Children.toArray(children);\n\treturn (\n\t\t<tr className={tableHeaderClasses}>\n\t\t\t{(children && allChild.map((child) => React.cloneElement(child, { ...otherProps }))) ||\n\t\t\t\theader.map((headerCelldata, idx) => (\n\t\t\t\t\t<TableHeaderCell\n\t\t\t\t\t\theaderCelldata={headerCelldata}\n\t\t\t\t\t\tkey={`header-cell-${idx}`}\n\t\t\t\t\t\talign={setAlignment(columnAlignment, idx)}\n\t\t\t\t\t\tclassName={tableHeaderCellClassName}\n\t\t\t\t\t\t{...otherProps}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t</tr>\n\t);\n};\n\n/**\n * Complete props of TableHeader.\n * @typedef {Object} TableHeader~propTypes\n *\n * @property {(string[]|Object[])} [header=[]] This is data for the tableHeader.\n * @property {string} [className=''] ClassName for TableHeader cell.\n * @property {string} [tableHeaderCellClassName=''] tableHeaderCellClassName.\n * @property {(string|node)} [children=null] Children for the Table Row.\n */\nTableHeader.propTypes = {\n\theader: PropTypes.arrayOf(PropTypes.oneOfType([ PropTypes.string, PropTypes.instanceOf(Object) ])),\n\tclassName: PropTypes.string,\n\ttableHeaderCellClassName: PropTypes.string,\n\tcolumnAlignment: PropTypes.string,\n\tchildren: PropTypes.oneOfType([ PropTypes.string, PropTypes.node ])\n};\n\nTableHeader.defaultProps = {\n\theader: [],\n\tclassName: '',\n\tcolumnAlignment: 'default',\n\ttableHeaderCellClassName: '',\n\tchildren: null\n};\n\n/**\n * Table component is creating a table with defined header and data rows.\n * It consumes different components like TableHeader, TableRow and TableCell which can either be custom or default.\n * Supports sorting as well.\n * @class\n * @param {Table~propTypes} props - Table props.\n * @returns {ReactElement}\n */\nconst Table = (props) => {\n\tconst {\n\t\trowsData,\n\t\theader,\n\t\tcustomRow,\n\t\tcustomHeader,\n\t\tnoBorder,\n\t\tnoLastBorder,\n\t\ttableClassName,\n\t\ttableHeaderClassName,\n\t\ttableHeaderCellClassName,\n\t\ttableRowClassName,\n\t\ttableBodyClassName,\n\t\ttableBodySize,\n\t\ttableHeaderSize,\n\t\trowProps,\n\t\tshowNoDataState,\n\t\ttableCellClassName,\n\t\tpaddingLevelHeaderX,\n\t\tpaddingLevelHeaderY,\n\t\tpaddingLevelX,\n\t\tpaddingLevelY,\n\t\t...otherProps\n\t} = props;\n\tconst RowComponent = customRow || TableRow;\n\tconst HeaderComponent = customHeader || TableHeader;\n\tconst tableClasses = classnames(\n\t\t'default-table',\n\t\tnoBorder && 'no-border',\n\t\tnoLastBorder && 'no-last-border',\n\t\ttableClassName\n\t);\n\n\treturn (\n\t\t<div className=\"table-wrapper\">\n\t\t\t<table className={tableClasses}>\n\t\t\t\t{header && (\n\t\t\t\t\t<thead className={classnames('table-head', `table-head-${tableHeaderSize}`)}>\n\t\t\t\t\t\t<HeaderComponent\n\t\t\t\t\t\t\theader={header}\n\t\t\t\t\t\t\tclassName={tableHeaderClassName}\n\t\t\t\t\t\t\ttableHeaderCellClassName={tableHeaderCellClassName}\n\t\t\t\t\t\t\tpaddingLevelHeaderX={paddingLevelHeaderX}\n\t\t\t\t\t\t\tpaddingLevelHeaderY={paddingLevelHeaderY}\n\t\t\t\t\t\t\t{...otherProps}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</thead>\n\t\t\t\t)}\n\t\t\t\t<tbody className={classnames('table-body', tableBodyClassName, `table-body-${tableBodySize}`)}>\n\t\t\t\t\t{rowsData.map((rowData, index) => (\n\t\t\t\t\t\t<RowComponent\n\t\t\t\t\t\t\trowData={rowData}\n\t\t\t\t\t\t\tkey={`row-${index}`}\n\t\t\t\t\t\t\tclassName={tableRowClassName}\n\t\t\t\t\t\t\trowProps={rowProps}\n\t\t\t\t\t\t\tshowNoDataState={showNoDataState}\n\t\t\t\t\t\t\ttableCellClassName={tableCellClassName}\n\t\t\t\t\t\t\tpaddingLevelX={paddingLevelX}\n\t\t\t\t\t\t\tpaddingLevelY={paddingLevelY}\n\t\t\t\t\t\t\t{...otherProps}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t);\n};\n\n/**\n * Complete props of Table.\n * @typedef {Object} Table~propTypes\n *\n * @property {rowsData} - This is rowsData for the table.\n * @property {(string[]|Object[])} [header=null] Header as array of string or object.\n * @property {func} [customRow=null] CustomRow Component..\n * @property {func} [customHeader=null] CustomeHeader Component.\n * @property {bool} [noBorder=false] Flag for NoBorder variant.\n * @property {bool} [showNoDataState=false] Flag for NoData State.\n * @property {number} [paddingLevelHeaderY=1] PaddingLevelY for the TableHeaderCell.\n * @property {number} [paddingLevelHeaderX=0] PaddingLevelX for the TableHeaderCell.\n * @property {number} [paddingLevelY=2] PaddingLevelY for the TableBodyCell.\n * @property {number} [paddingLevelX=0] PaddingLevelX for the TableBodyCell.\n * @property {string} [tableClassName=''] This variable is used to override the default table styling.\n * @property {string} [tableHeaderClassName=''] This variable is used to override the default table header styling.\n * @property {string} [tableHeaderCellClassName=''] This variable is used to override the default table header cell styling.\n * @property {string} [tableRowClassName=''] This variable is used to override the default table row styling.\n * @property {string} [tableCellClassName=''] This variable is used to override the default table cell styling.\n * @property {string} [tableBodyClassName=''] This variable is used to override the default table body styling.\n * @property {bool} [noLastBorder=false] Flag for no last border variant.\n * @property {('small'|'medium'|'large')} [tableHeaderSize='medium'] This is used to set the size for Header.\n * @property {('default'|'left'|'right'|'center')} [columnAlignment='default'] This is used to set the alignment for each column.\n * @property {('small'|'medium'|'large')}  [tableBodySize='medium'] This is used to set the size for body content.\n * @property {object} [rowProps={}] Custom rows props for the rows.\n * @property {object} [columns=[]] Columns props for the rows\n */\nTable.propTypes = {\n\trowsData: PropTypes.arrayOf(PropTypes.instanceOf(Object)).isRequired,\n\theader: PropTypes.arrayOf(PropTypes.oneOfType([ PropTypes.string, PropTypes.instanceOf(Object) ])),\n\tcustomRow: PropTypes.func,\n\tcustomHeader: PropTypes.func,\n\tnoBorder: PropTypes.bool,\n\tshowNoDataState: PropTypes.bool,\n\tpaddingLevelHeaderY: PropTypes.number,\n\tpaddingLevelHeaderX: PropTypes.number,\n\tpaddingLevelY: PropTypes.number,\n\tpaddingLevelX: PropTypes.number,\n\ttableClassName: PropTypes.string,\n\ttableHeaderClassName: PropTypes.string,\n\ttableHeaderCellClassName: PropTypes.string,\n\ttableRowClassName: PropTypes.string,\n\ttableCellClassName: PropTypes.string,\n\ttableBodyClassName: PropTypes.string,\n\tnoLastBorder: PropTypes.bool,\n\ttableHeaderSize: PropTypes.oneOf([ 'small', 'medium', 'large' ]),\n\tcolumnAlignment: PropTypes.oneOf([ 'default', 'left', 'right', 'center' ]),\n\ttableBodySize: PropTypes.oneOf([ 'small', 'medium', 'large' ]),\n\trowProps: PropTypes.shape({\n\t\tcolumns: PropTypes.arrayOf(PropTypes.instanceOf(Object))\n\t})\n};\n\nTable.defaultProps = {\n\theader: null,\n\tcustomRow: null,\n\tcustomHeader: null,\n\tnoBorder: false,\n\tshowNoDataState: true,\n\tpaddingLevelHeaderY: 1,\n\tpaddingLevelHeaderX: 0,\n\tpaddingLevelY: 2,\n\tpaddingLevelX: 0,\n\ttableClassName: '',\n\ttableHeaderClassName: '',\n\ttableHeaderCellClassName: '',\n\ttableRowClassName: '',\n\ttableCellClassName: '',\n\ttableBodyClassName: '',\n\tnoLastBorder: false,\n\ttableHeaderSize: 'medium',\n\ttableBodySize: 'medium',\n\tcolumnAlignment: 'default',\n\trowProps: {\n\t\tcolumns: []\n\t}\n};\nexport { Table, TableHeader, TableHeaderCell, TableRow, TableCell };\n"]},"metadata":{},"sourceType":"module"}