{"ast":null,"code":"var _jsxFileName = \"/Users/santando/xlbas-project/src/components/Campaigns/index.js\";\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport moment from 'moment';\nimport DatePicker from 'react-date-picker';\nimport { Modal } from '@material-ui/core';\nimport { MdInsertDriveFile, MdGraphicEq } from 'react-icons/md';\nimport { GoCalendar } from 'react-icons/go';\nimport { Table, TableRow, TableCell } from '../../common/Table';\nimport './index.scss';\nexport const CampaignRow = props => {\n  const {\n    t\n  } = useTranslation(); // Destructure Incoming props.\n\n  const {\n    rowData: {\n      campaignId,\n      createdOn,\n      image_url,\n      name,\n      price,\n      region\n    } = {},\n    rowProps: {\n      scheduleCampaign\n    }\n  } = props;\n  const formattedDate = moment(Number(createdOn)).format('MMM YYYY, DD');\n  const relativeDate = moment(Number(createdOn)).fromNow();\n  const [pricingModalOpen, setPricingModalOpen] = React.useState(false);\n  const [datePickerOpen, setDatePickerOpen] = useState(false);\n\n  const scheduleCampaignHandler = value => {\n    const newDate = moment(value).format();\n    const timeStamp = moment(newDate).format('x');\n    scheduleCampaign(campaignId, timeStamp);\n  };\n\n  const handlePricingModalOpen = () => {\n    setPricingModalOpen(true);\n  };\n\n  const handlePricingModalClose = () => {\n    setPricingModalOpen(false);\n  };\n\n  const handleDatePickerOpen = () => {\n    setDatePickerOpen(true);\n  };\n\n  const handleDatePickerClose = () => {\n    setDatePickerOpen(false);\n  };\n\n  const priceLabels = ['1 week - 1 Month', '6 Months', '1 Year'];\n  const priceValueLabels = ['monthly', 'halfYearly', 'annually'];\n  const body = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex mb-32\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    width: 80,\n    height: 80,\n    src: image_url,\n    alt: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ml-32\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, name, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-small text-gray\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, region))), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \"Pricing\"), !!price && !!price.length && price.map((elem, index) => /*#__PURE__*/React.createElement(\"dl\", {\n    className: \"pricing flex mb-64\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"dt\", {\n    className: \"flex--1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, priceLabels[index]), /*#__PURE__*/React.createElement(\"dd\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, elem[priceValueLabels[index]]))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handlePricingModalClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, \"Close Modal\"));\n  const datePicker = /*#__PURE__*/React.createElement(DatePicker, {\n    isOpen: datePickerOpen,\n    onChange: scheduleCampaignHandler,\n    value: new Date(),\n    onCalendarClose: handleDatePickerClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    width: \"20%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, formattedDate, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-small text-gray\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, relativeDate))), /*#__PURE__*/React.createElement(TableCell, {\n    width: \"20%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    width: 40,\n    height: 40,\n    src: image_url,\n    alt: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ml-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, name, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-small text-gray\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, region)))), /*#__PURE__*/React.createElement(TableCell, {\n    width: \"20%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn-link\",\n    onClick: handlePricingModalOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, \"t()\"), /*#__PURE__*/React.createElement(Modal, {\n    open: pricingModalOpen,\n    onClose: handlePricingModalClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, body)), /*#__PURE__*/React.createElement(TableCell, {\n    width: \"60%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MdInsertDriveFile, {\n    size: 20,\n    className: \"pointer mr-8\",\n    color: \"#16a769\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"mr-24 small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, \"CSV\"), /*#__PURE__*/React.createElement(MdGraphicEq, {\n    size: 20,\n    className: \"pointer mr-8\",\n    color: \"#16a769\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"mr-24 small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, \"Report\"), /*#__PURE__*/React.createElement(GoCalendar, {\n    size: 20,\n    className: \"pointer mr-2\",\n    color: \"#16a769\",\n    onClick: handleDatePickerOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"mr-24 small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, \"Schedule Again\"), /*#__PURE__*/React.createElement(Modal, {\n    open: datePickerOpen,\n    onClose: handleDatePickerClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, datePicker)))));\n};\n\nconst Campaigns = props => {\n  const {\n    t\n  } = useTranslation(); // returns the UI for Campaigns Table.\n\n  const getHeader = () => [`${t('date')}`, `${t('campaign')}`, `${t('view')}`, `${t('actions')}`];\n\n  const {\n    campaigns = [],\n    scheduleCampaign\n  } = props;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Table, {\n    rowsData: campaigns,\n    rowProps: {\n      scheduleCampaign\n    },\n    header: getHeader(),\n    customRow: CampaignRow,\n    tableHeaderSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Campaigns;","map":{"version":3,"sources":["/Users/santando/xlbas-project/src/components/Campaigns/index.js"],"names":["React","useState","useTranslation","moment","DatePicker","Modal","MdInsertDriveFile","MdGraphicEq","GoCalendar","Table","TableRow","TableCell","CampaignRow","props","t","rowData","campaignId","createdOn","image_url","name","price","region","rowProps","scheduleCampaign","formattedDate","Number","format","relativeDate","fromNow","pricingModalOpen","setPricingModalOpen","datePickerOpen","setDatePickerOpen","scheduleCampaignHandler","value","newDate","timeStamp","handlePricingModalOpen","handlePricingModalClose","handleDatePickerOpen","handleDatePickerClose","priceLabels","priceValueLabels","body","length","map","elem","index","datePicker","Date","Campaigns","getHeader","campaigns"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport moment from 'moment';\nimport DatePicker from 'react-date-picker';\nimport { Modal } from '@material-ui/core';\nimport { MdInsertDriveFile, MdGraphicEq } from 'react-icons/md';\nimport { GoCalendar } from 'react-icons/go';\n\nimport { Table, TableRow, TableCell } from '../../common/Table';\n\nimport './index.scss';\n\nexport const CampaignRow = props => {\n  const { t } = useTranslation();\n\n  // Destructure Incoming props.\n  const {\n    rowData: { campaignId, createdOn, image_url, name, price, region } = {},\n    rowProps: { scheduleCampaign }\n  } = props;\n  const formattedDate = moment(Number(createdOn)).format('MMM YYYY, DD');\n\n  const relativeDate = moment(Number(createdOn)).fromNow();\n\n  const [pricingModalOpen, setPricingModalOpen] = React.useState(false);\n  const [datePickerOpen, setDatePickerOpen] = useState(false);\n  const scheduleCampaignHandler = value => {\n    const newDate = moment(value).format();\n    const timeStamp = moment(newDate).format('x');\n\n    scheduleCampaign(campaignId, timeStamp);\n  };\n\n  const handlePricingModalOpen = () => {\n    setPricingModalOpen(true);\n  };\n\n  const handlePricingModalClose = () => {\n    setPricingModalOpen(false);\n  };\n\n  const handleDatePickerOpen = () => {\n    setDatePickerOpen(true);\n  };\n\n  const handleDatePickerClose = () => {\n    setDatePickerOpen(false);\n  };\n\n  const priceLabels = ['1 week - 1 Month', '6 Months', '1 Year'];\n  const priceValueLabels = ['monthly', 'halfYearly', 'annually'];\n\n  const body = (\n    <div className=\"modal-body\">\n      <div className=\"flex mb-32\">\n        <img width={80} height={80} src={image_url} alt={name} />\n        <div className=\"ml-32\">\n          {name}\n          <br />\n          <span className=\"text-small text-gray\">{region}</span>\n        </div>\n      </div>\n      <h4>Pricing</h4>\n      {!!price &&\n        !!price.length &&\n        price.map((elem, index) => (\n          <dl className=\"pricing flex mb-64\">\n            <dt className=\"flex--1\">{priceLabels[index]}</dt>\n            <dd>{elem[priceValueLabels[index]]}</dd>\n          </dl>\n        ))}\n      <button type=\"button\" onClick={handlePricingModalClose}>\n        Close Modal\n      </button>\n    </div>\n  );\n\n  const datePicker = (\n    <DatePicker\n      isOpen={datePickerOpen}\n      onChange={scheduleCampaignHandler}\n      value={new Date()}\n      onCalendarClose={handleDatePickerClose}\n    />\n  );\n\n  return (\n    <>\n      <TableRow>\n        <TableCell width=\"20%\">\n          <>\n            {formattedDate}\n            <br />\n            <span className=\"text-small text-gray\">{relativeDate}</span>\n          </>\n        </TableCell>\n        <TableCell width=\"20%\">\n          <div className=\"flex\">\n            <img width={40} height={40} src={image_url} alt={name} />\n            <div className=\"ml-8\">\n              {name}\n              <br />\n              <span className=\"text-small text-gray\">{region}</span>\n            </div>\n          </div>\n        </TableCell>\n        <TableCell width=\"20%\">\n          <button className=\"btn-link\" onClick={handlePricingModalOpen}>\n            t()\n          </button>\n          <Modal open={pricingModalOpen} onClose={handlePricingModalClose}>\n            {body}\n          </Modal>\n        </TableCell>\n        <TableCell width=\"60%\">\n          <div class=\"flex\">\n            <MdInsertDriveFile size={20} className=\"pointer mr-8\" color=\"#16a769\" />\n            <label className=\"mr-24 small\">CSV</label>\n            <MdGraphicEq size={20} className=\"pointer mr-8\" color=\"#16a769\" />\n            <label className=\"mr-24 small\">Report</label>\n            <GoCalendar size={20} className=\"pointer mr-2\" color=\"#16a769\" onClick={handleDatePickerOpen} />\n            <label className=\"mr-24 small\">Schedule Again</label>\n            <Modal open={datePickerOpen} onClose={handleDatePickerClose}>\n              {datePicker}\n            </Modal>\n          </div>\n        </TableCell>\n      </TableRow>\n    </>\n  );\n};\n\nconst Campaigns = props => {\n  const { t } = useTranslation();\n  // returns the UI for Campaigns Table.\n\n  const getHeader = () => [`${t('date')}`, `${t('campaign')}`, `${t('view')}`, `${t('actions')}`];\n\n  const { campaigns = [], scheduleCampaign } = props;\n\n  return (\n    <>\n      <Table\n        rowsData={campaigns}\n        rowProps={{ scheduleCampaign }}\n        header={getHeader()}\n        customRow={CampaignRow}\n        tableHeaderSize=\"small\"\n      />\n    </>\n  );\n};\nexport default Campaigns;\n"]},"metadata":{},"sourceType":"module"}