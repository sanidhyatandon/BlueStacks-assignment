{"ast":null,"code":"var _jsxFileName = \"/Users/santando/xlbas-project/src/components/Campaigns/index.js\";\n\n/* eslint-disable no-undef */\nimport React, { useState } from 'react';\nimport moment from 'moment';\nimport DatePicker from 'react-date-picker';\nimport { Modal } from '@material-ui/core';\nimport { MdInsertDriveFile, MdGraphicEq } from 'react-icons/md';\nimport { GoCalendar } from 'react-icons/go';\nimport { Table, TableRow, TableCell } from '../../common/Table';\nimport './index.scss';\nexport const CampaignRow = props => {\n  // Destructure Incoming props.\n  const {\n    rowData: {\n      createdOn,\n      csv,\n      image_url,\n      name,\n      price,\n      region,\n      report\n    } = {}\n  } = props;\n  const formattedDate = moment(createdOn).format('MMM YYYY, DD');\n  const relativeDate = moment(createdOn).fromNow();\n  const [open, setOpen] = React.useState(false);\n  const [date, setDate] = useState(new Date());\n  const [isDatePicker, setIsDatePicker] = useState(false);\n\n  const handleOpen = (isDatePicker = false) => {\n    setOpen(true);\n    setIsDatePicker(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  console.log(price);\n  const priceLabels = ['1 week - 1 Month', '6 Months', '1 Year'];\n  const priceValueLabels = ['monthly', 'halfYearly', 'annually'];\n  const body = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex mb-32\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    width: 80,\n    height: 80,\n    src: image_url,\n    alt: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ml-32\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, name, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-small text-gray\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, region))), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Pricing\"), !!price && !!price.length && price.map((elem, index) => /*#__PURE__*/React.createElement(\"dl\", {\n    className: \"pricing flex mb-64\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"dt\", {\n    className: \"flex--1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, priceLabels[index]), /*#__PURE__*/React.createElement(\"dd\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, elem[priceValueLabels[index]]))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"Close Modal\"));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    width: \"20%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, formattedDate, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-small text-gray\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, relativeDate))), /*#__PURE__*/React.createElement(TableCell, {\n    width: \"20%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    width: 30,\n    height: 30,\n    src: image_url,\n    alt: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ml-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, name, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-small text-gray\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, region)))), /*#__PURE__*/React.createElement(TableCell, {\n    width: \"20%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn-link\",\n    onClick: handleOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \"View Pricing\")), /*#__PURE__*/React.createElement(TableCell, {\n    width: \"60%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mr-20 small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MdInsertDriveFile, {\n    size: 20,\n    className: \"pointer mr-8\",\n    color: \"#16a769\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }), \"CSV\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mr-20 small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MdGraphicEq, {\n    size: 20,\n    className: \"pointer mr-8\",\n    color: \"#16a769\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }), \"Report\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mr-20 small\",\n    onClick: handleOpen(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DatePicker, {\n    calendarIcon: /*#__PURE__*/React.createElement(GoCalendar, {\n      size: 20,\n      className: \"pointer mr-8\",\n      color: \"#16a769\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 31\n      }\n    }),\n    onChange: setDate,\n    value: date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }), \"Schedule Again\")))), /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, body));\n};\n\nconst Campaigns = props => {\n  // returns the UI for Campaigns Table.\n  const getHeader = () => ['DATE', 'CAMPAIGN', 'VIEW', 'ACTIONS'];\n\n  const {\n    campaigns = []\n  } = props;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Table, {\n    rowsData: campaigns,\n    header: getHeader(),\n    customRow: CampaignRow,\n    tableHeaderSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Campaigns;","map":{"version":3,"sources":["/Users/santando/xlbas-project/src/components/Campaigns/index.js"],"names":["React","useState","moment","DatePicker","Modal","MdInsertDriveFile","MdGraphicEq","GoCalendar","Table","TableRow","TableCell","CampaignRow","props","rowData","createdOn","csv","image_url","name","price","region","report","formattedDate","format","relativeDate","fromNow","open","setOpen","date","setDate","Date","isDatePicker","setIsDatePicker","handleOpen","handleClose","console","log","priceLabels","priceValueLabels","body","length","map","elem","index","Campaigns","getHeader","campaigns"],"mappings":"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","sourcesContent":["/* eslint-disable no-undef */\nimport React, { useState } from 'react';\nimport moment from 'moment';\nimport DatePicker from 'react-date-picker';\nimport { Modal } from '@material-ui/core';\nimport { MdInsertDriveFile, MdGraphicEq } from 'react-icons/md';\nimport { GoCalendar } from 'react-icons/go';\n\nimport { Table, TableRow, TableCell } from '../../common/Table';\n\nimport './index.scss';\n\nexport const CampaignRow = props => {\n  // Destructure Incoming props.\n  const { rowData: { createdOn, csv, image_url, name, price, region, report } = {} } = props;\n  const formattedDate = moment(createdOn).format('MMM YYYY, DD');\n  const relativeDate = moment(createdOn).fromNow();\n\n  const [open, setOpen] = React.useState(false);\n  const [date, setDate] = useState(new Date());\n  const [isDatePicker, setIsDatePicker] = useState(false);\n\n\n  const handleOpen = (isDatePicker = false) => {\n    setOpen(true);\n    setIsDatePicker(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  console.log(price);\n\n  const priceLabels = ['1 week - 1 Month', '6 Months', '1 Year'];\n  const priceValueLabels = ['monthly', 'halfYearly', 'annually'];\n\n  const body = (\n    <div className=\"modal-body\">\n      <div className=\"flex mb-32\">\n        <img width={80} height={80} src={image_url} alt={name} />\n        <div className=\"ml-32\">\n          {name}\n          <br />\n          <span className=\"text-small text-gray\">{region}</span>\n        </div>\n      </div>\n      <h4>Pricing</h4>\n      {!!price &&\n        !!price.length &&\n        price.map((elem, index) => (\n          <dl className=\"pricing flex mb-64\">\n            <dt className=\"flex--1\">{priceLabels[index]}</dt>\n            <dd>{elem[priceValueLabels[index]]}</dd>\n          </dl>\n        ))}\n      <button type=\"button\" onClick={handleClose}>\n        Close Modal\n      </button>\n    </div>\n  );\n\n  return (\n    <>\n      <TableRow>\n        <TableCell width=\"20%\">\n          <>\n            {formattedDate}\n            <br />\n            <span className=\"text-small text-gray\">{relativeDate}</span>\n          </>\n        </TableCell>\n        <TableCell width=\"20%\">\n          <div className=\"flex\">\n            <img width={30} height={30} src={image_url} alt={name} />\n            <div className=\"ml-8\">\n              {name}\n              <br />\n              <span className=\"text-small text-gray\">{region}</span>\n            </div>\n          </div>\n        </TableCell>\n        <TableCell width=\"20%\">\n          <button className=\"btn-link\" onClick={handleOpen}>\n            View Pricing\n          </button>\n        </TableCell>\n        <TableCell width=\"60%\">\n          <div class=\"flex\">\n            <span className=\"mr-20 small\">\n              <MdInsertDriveFile size={20} className=\"pointer mr-8\" color=\"#16a769\" />\n              CSV\n            </span>\n            <span className=\"mr-20 small\">\n              <MdGraphicEq size={20} className=\"pointer mr-8\" color=\"#16a769\" />\n              Report\n            </span>\n            <span className=\"mr-20 small\" onClick={handleOpen(true)}>\n              <DatePicker\n                calendarIcon={<GoCalendar size={20} className=\"pointer mr-8\" color=\"#16a769\" />}\n                onChange={setDate}\n                value={date}\n              />\n              Schedule Again\n            </span>\n          </div>\n        </TableCell>\n      </TableRow>\n      <Modal open={open} onClose={handleClose}>\n        {body}\n      </Modal>\n    </>\n  );\n};\n\nconst Campaigns = props => {\n  // returns the UI for Campaigns Table.\n\n  const getHeader = () => ['DATE', 'CAMPAIGN', 'VIEW', 'ACTIONS'];\n\n  const { campaigns = [] } = props;\n\n  return (\n    <>\n      <Table rowsData={campaigns} header={getHeader()} customRow={CampaignRow} tableHeaderSize=\"small\" />\n    </>\n  );\n};\nexport default Campaigns;\n"]},"metadata":{},"sourceType":"module"}