{"ast":null,"code":"var _jsxFileName = \"/Users/santando/xlbas-project/src/containers/Dashboard/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport apiConfig from '../../api.config';\nimport DashboardView from '../../components/Dashboard';\nimport Loader from '../../common/Loader';\n\nconst Dashboard = () => {\n  const [campaigns, setCampaigns] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const scheduleCampaign = (id, value) => {\n    const {\n      getCampaigns: {\n        url: getCampaignsURL\n      }\n    } = apiConfig;\n    console.log(id, 'this is id');\n    let targetCampaignIndex = campaigns.findIndex(campaign => campaign.campaignId === id);\n    campaigns[targetCampaignIndex].createdOn = value;\n    const requestPayload = [...campaigns];\n    axios.post(getCampaignsURL, requestPayload);\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    const {\n      getCampaigns: {\n        url: getCampaignsURL\n      }\n    } = apiConfig;\n    axios.get(getCampaignsURL).then(({\n      data\n    }) => {\n      setCampaigns(data);\n      setIsLoading(false);\n    }).catch(error => console.log(error));\n  }, [campaigns]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"campaign-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, campaigns && campaigns.length ? /*#__PURE__*/React.createElement(DashboardView, {\n    campaigns: campaigns,\n    scheduleCampaign: scheduleCampaign,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \" No Data Available\")), isLoading && /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/santando/xlbas-project/src/containers/Dashboard/index.js"],"names":["React","useState","useEffect","axios","apiConfig","DashboardView","Loader","Dashboard","campaigns","setCampaigns","isLoading","setIsLoading","scheduleCampaign","id","value","getCampaigns","url","getCampaignsURL","console","log","targetCampaignIndex","findIndex","campaign","campaignId","createdOn","requestPayload","post","get","then","data","catch","error","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,IAAD,CAA1C;;AAEA,QAAMW,gBAAgB,GAAG,CAACC,EAAD,EAAKC,KAAL,KAAe;AACtC,UAAM;AACJC,MAAAA,YAAY,EAAE;AAAEC,QAAAA,GAAG,EAAEC;AAAP;AADV,QAEFb,SAFJ;AAGAc,IAAAA,OAAO,CAACC,GAAR,CAAYN,EAAZ,EAAgB,YAAhB;AACA,QAAIO,mBAAmB,GAAGZ,SAAS,CAACa,SAAV,CAAoBC,QAAQ,IAAIA,QAAQ,CAACC,UAAT,KAAwBV,EAAxD,CAA1B;AACAL,IAAAA,SAAS,CAACY,mBAAD,CAAT,CAA+BI,SAA/B,GAA2CV,KAA3C;AACA,UAAMW,cAAc,GAAG,CAAC,GAAGjB,SAAJ,CAAvB;AACAL,IAAAA,KAAK,CAACuB,IAAN,CAAWT,eAAX,EAA4BQ,cAA5B;AACD,GATD;;AAWAvB,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAM;AACJI,MAAAA,YAAY,EAAE;AAAEC,QAAAA,GAAG,EAAEC;AAAP;AADV,QAEFb,SAFJ;AAGAD,IAAAA,KAAK,CACFwB,GADH,CACOV,eADP,EAEGW,IAFH,CAEQ,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAc;AAClBpB,MAAAA,YAAY,CAACoB,IAAD,CAAZ;AACAlB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KALH,EAMGmB,KANH,CAMSC,KAAK,IAAIb,OAAO,CAACC,GAAR,CAAYY,KAAZ,CANlB;AAOD,GAZQ,EAYN,CAACvB,SAAD,CAZM,CAAT;AAcA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,SAAS,IAAIA,SAAS,CAACwB,MAAvB,gBACC,oBAAC,aAAD;AAAe,IAAA,SAAS,EAAExB,SAA1B;AAAqC,IAAA,gBAAgB,EAAEI,gBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,gBAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJJ,CADF,EAQGF,SAAS,iBAAI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARhB,CADF;AAYD,CAzCD;;AA2CA,eAAeH,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport apiConfig from '../../api.config';\nimport DashboardView from '../../components/Dashboard';\n\nimport Loader from '../../common/Loader';\n\nconst Dashboard = () => {\n  const [campaigns, setCampaigns] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const scheduleCampaign = (id, value) => {\n    const {\n      getCampaigns: { url: getCampaignsURL }\n    } = apiConfig;\n    console.log(id, 'this is id');\n    let targetCampaignIndex = campaigns.findIndex(campaign => campaign.campaignId === id);\n    campaigns[targetCampaignIndex].createdOn = value;\n    const requestPayload = [...campaigns];\n    axios.post(getCampaignsURL, requestPayload);\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    const {\n      getCampaigns: { url: getCampaignsURL }\n    } = apiConfig;\n    axios\n      .get(getCampaignsURL)\n      .then(({ data }) => {\n        setCampaigns(data);\n        setIsLoading(false);\n      })\n      .catch(error => console.log(error));\n  }, [campaigns]);\n\n  return (\n    <div>\n      <div className=\"campaign-list\">\n        {campaigns && campaigns.length ? (\n          <DashboardView campaigns={campaigns} scheduleCampaign={scheduleCampaign} />\n        ) : (\n          <div> No Data Available</div>\n        )}\n      </div>\n      {isLoading && <Loader />}\n    </div>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}