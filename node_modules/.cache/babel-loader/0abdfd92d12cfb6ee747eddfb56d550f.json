{"ast":null,"code":"var _jsxFileName = \"/Users/santando/xlbas-project/src/containers/Dashboard/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport apiConfig from '../../api.config';\nimport DashboardView from '../../components/Dashboard';\nimport Loader from '../../common/Loader';\nimport { checkDateStatus } from '../../common/utilities';\n\nconst FoodList = () => {\n  const [campaigns, setCampaigns] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    LET;\n    campaigns.map(campaign => console.log(checkDateStatus(campaign.createdOn)));\n  }, [campaigns]);\n  useEffect(() => {\n    setIsLoading(true);\n    const {\n      getCampaigns: {\n        url: getCampaignsURL\n      }\n    } = apiConfig;\n    fetch(getCampaignsURL).then(response => response.json()).then(data => {\n      setCampaigns(data);\n      setIsLoading(false);\n    }).catch(error => console.log(error));\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"campaign-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }\n  }, campaigns && campaigns.length ? /*#__PURE__*/React.createElement(DashboardView, {\n    data: campaigns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 38\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 75\n    }\n  }, \" No Data Available\")), isLoading && /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 18\n    }\n  }));\n};\n\nexport default FoodList;","map":{"version":3,"sources":["/Users/santando/xlbas-project/src/containers/Dashboard/index.js"],"names":["React","useState","useEffect","apiConfig","DashboardView","Loader","checkDateStatus","FoodList","campaigns","setCampaigns","isLoading","setIsLoading","LET","map","campaign","console","log","createdOn","getCampaigns","url","getCampaignsURL","fetch","then","response","json","data","catch","error","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,eAAT,QAAgC,wBAAhC;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACtB,QAAM,CAAEC,SAAF,EAAaC,YAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAAES,SAAF,EAAaC,YAAb,IAA8BV,QAAQ,CAAC,IAAD,CAA5C;AAEAC,EAAAA,SAAS,CACR,MAAM;AACIU,IAAAA,GAAG;AACZJ,IAAAA,SAAS,CAACK,GAAV,CAAeC,QAAD,IAAcC,OAAO,CAACC,GAAR,CAAYV,eAAe,CAACQ,QAAQ,CAACG,SAAV,CAA3B,CAA5B;AACA,GAJO,EAKR,CAAET,SAAF,CALQ,CAAT;AAQAN,EAAAA,SAAS,CAAC,MAAM;AACfS,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAM;AAAEO,MAAAA,YAAY,EAAE;AAAEC,QAAAA,GAAG,EAAEC;AAAP;AAAhB,QAA6CjB,SAAnD;AACAkB,IAAAA,KAAK,CAACD,eAAD,CAAL,CACEE,IADF,CACQC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADrB,EAEEF,IAFF,CAEQG,IAAD,IAAU;AACfhB,MAAAA,YAAY,CAACgB,IAAD,CAAZ;AACAd,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACA,KALF,EAMEe,KANF,CAMSC,KAAD,IAAWZ,OAAO,CAACC,GAAR,CAAYW,KAAZ,CANnB;AAOA,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEnB,SAAS,IAAIA,SAAS,CAACoB,MAAvB,gBAAgC,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAEpB,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhC,gBAAqE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADvE,CADD,EAIEE,SAAS,iBAAI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJf,CADD;AAQA,CAhCD;;AAkCA,eAAeH,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport apiConfig from '../../api.config';\nimport DashboardView from '../../components/Dashboard';\n\nimport Loader from '../../common/Loader';\nimport { checkDateStatus } from '../../common/utilities';\n\nconst FoodList = () => {\n\tconst [ campaigns, setCampaigns ] = useState([]);\n\tconst [ isLoading, setIsLoading ] = useState(true);\n\n\tuseEffect(\n\t\t() => {\n            LET \n\t\t\tcampaigns.map((campaign) => console.log(checkDateStatus(campaign.createdOn)))\n\t\t},\n\t\t[ campaigns ]\n\t);\n\n\tuseEffect(() => {\n\t\tsetIsLoading(true);\n\t\tconst { getCampaigns: { url: getCampaignsURL } } = apiConfig;\n\t\tfetch(getCampaignsURL)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tsetCampaigns(data);\n\t\t\t\tsetIsLoading(false);\n\t\t\t})\n\t\t\t.catch((error) => console.log(error));\n\t}, []);\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"campaign-list\">\n\t\t\t\t{campaigns && campaigns.length ? <DashboardView data={campaigns} /> : <div> No Data Available</div>}\n\t\t\t</div>\n\t\t\t{isLoading && <Loader />}\n\t\t</div>\n\t);\n};\n\nexport default FoodList;\n"]},"metadata":{},"sourceType":"module"}