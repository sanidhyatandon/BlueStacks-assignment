{"ast":null,"code":"var _jsxFileName = \"/Users/santando/xlbas-project/src/containers/FoodList/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport apiConfig from '../../api.config';\nimport FoodItem from '../../components/FoodItem';\nimport TextInput from '../../common/TextInput';\nimport { searchPlaceholder } from '../../constants';\nimport Loader from '../../common/Loader';\n\nconst FoodList = () => {\n  const [foodList, setFoodList] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [searchTerm, setSearchValue] = useState('');\n\n  const handleChange = event => {\n    setSearchValue(event.target.value);\n  };\n\n  const searchDishes = (searchTerm, foodList) => {\n    let filteredFoodItem = [];\n    foodList.map(food => {\n      if (food.name.toLowerCase().indexOf(searchTerm.toLowerCase()) !== -1) {\n        filteredFoodItem.push(food);\n      }\n\n      return false;\n    });\n    return filteredFoodItem;\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    const {\n      getFoodList: {\n        url: getFoodListURL\n      }\n    } = apiConfig;\n\n    if (searchTerm.length === 0) {\n      fetch(getFoodListURL).then(response => response.json()).then(data => {\n        setFoodList(data);\n        setIsLoading(false);\n      }).catch(error => console.log(error));\n    }\n  }, [searchTerm]);\n  useEffect(() => {\n    if (searchTerm.length > 3) {\n      const filteredFoodItem = searchDishes(searchTerm, foodList);\n      setFoodList(filteredFoodItem);\n    }\n  }, [searchTerm]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TextInput, {\n    className: \"space-around\",\n    type: \"text\",\n    placeholder: searchPlaceholder,\n    onChange: event => {\n      event.preventDefault();\n      handleChange(event);\n    },\n    value: searchTerm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"food-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, foodList && foodList.length ? /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, foodList.map(food => {\n    const {\n      id\n    } = food;\n    return /*#__PURE__*/React.createElement(FoodItem, {\n      key: id,\n      data: food,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 22\n      }\n    });\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \" No Data Available\")), isLoading && /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }));\n};\n\nexport default FoodList;","map":{"version":3,"sources":["/Users/santando/xlbas-project/src/containers/FoodList/index.js"],"names":["React","useState","useEffect","apiConfig","FoodItem","TextInput","searchPlaceholder","Loader","FoodList","foodList","setFoodList","isLoading","setIsLoading","searchTerm","setSearchValue","handleChange","event","target","value","searchDishes","filteredFoodItem","map","food","name","toLowerCase","indexOf","push","getFoodList","url","getFoodListURL","length","fetch","then","response","json","data","catch","error","console","log","preventDefault","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport apiConfig from '../../api.config';\nimport FoodItem from '../../components/FoodItem';\nimport TextInput from '../../common/TextInput';\n\nimport { searchPlaceholder } from '../../constants';\nimport Loader from '../../common/Loader';\n\nconst FoodList = () => {\n  const [foodList, setFoodList] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [searchTerm, setSearchValue] = useState('');\n\n  const handleChange = event => {\n    setSearchValue(event.target.value);\n  };\n\n  const searchDishes = (searchTerm, foodList) => {\n    let filteredFoodItem = [];\n    foodList.map(food => {\n      if (food.name.toLowerCase().indexOf(searchTerm.toLowerCase()) !== -1) {\n        filteredFoodItem.push(food);\n      }\n      return false;\n    });\n    return filteredFoodItem;\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    const {\n      getFoodList: { url: getFoodListURL }\n    } = apiConfig;\n    if (searchTerm.length === 0) {\n      fetch(getFoodListURL)\n        .then(response => response.json())\n        .then(data => {\n          setFoodList(data);\n          setIsLoading(false);\n        })\n        .catch(error => console.log(error));\n    }\n  }, [searchTerm]);\n\n  useEffect(() => {\n    if (searchTerm.length > 3) {\n      const filteredFoodItem = searchDishes(searchTerm, foodList);\n      setFoodList(filteredFoodItem);\n    }\n  }, [searchTerm]);\n\n  return (\n    <div>\n      <TextInput\n        className=\"space-around\"\n        type=\"text\"\n        placeholder={searchPlaceholder}\n        onChange={event => {\n          event.preventDefault();\n          handleChange(event);\n        }}\n        value={searchTerm}\n      />\n      <div className=\"food-list\">\n        {foodList && foodList.length ? (\n          <ul>\n            {foodList.map(food => {\n              const { id } = food;\n              return <FoodItem key={id} data={food} />;\n            })}\n          </ul>\n        ) : (\n          <div> No Data Available</div>\n        )}\n      </div>\n      {isLoading && <Loader />}\n    </div>\n  );\n};\n\nexport default FoodList;\n"]},"metadata":{},"sourceType":"module"}