{"ast":null,"code":"var _jsxFileName = \"/Users/santando/xlbas-project/src/components/Campaigns/index.js\";\nimport React from 'react';\nimport { Table, TableRow, TableCell } from '../../common/Table';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  }\n});\nexport const CampaignRow = props => {\n  // Destructure Incoming props.\n  const {\n    rowData: {\n      amount,\n      currencyCode,\n      pricingLotId,\n      quantity,\n      scaleTicketId,\n      lineItemNumber,\n      contractId,\n      deliveryTechnicalId\n    } = {},\n    config\n  } = props;\n  const {\n    links: {\n      deliveryRoute,\n      contractRouteMerch\n    } = {},\n    currencyMapping: {\n      digitsAfterDecimal: currencyDigits\n    } = {},\n    weightMapping: {\n      digitsAfterDecimal: weightDigits\n    } = {}\n  } = config || {};\n};\n\nconst Campaigns = props => {\n  function createData(name, calories, fat, carbs, protein) {\n    return {\n      name,\n      calories,\n      fat,\n      carbs,\n      protein\n    };\n  }\n\n  const rows = [createData('Frozen yoghurt', 159, 6.0, 24, 4.0), createData('Ice cream sandwich', 237, 9.0, 37, 4.3), createData('Eclair', 262, 16.0, 24, 6.0), createData('Cupcake', 305, 3.7, 67, 4.3), createData('Gingerbread', 356, 16.0, 49, 3.9)];\n  const classes = useStyles();\n\n  const getHeader = () => [{\n    label: 'Date',\n    align: 'left'\n  }, 'Campaignn', 'View', 'Actions']; // returns the UI for Settlement Table.\n\n\n  return /*#__PURE__*/React.createElement(Table, {\n    columnAlignment: \"right\",\n    rowsData: settlementLineItems,\n    header: getHeader(),\n    config: config,\n    customRow: CampaignRow,\n    tableHeaderSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 1\n    }\n  });\n};\n\nexport default Campaigns;","map":{"version":3,"sources":["/Users/santando/xlbas-project/src/components/Campaigns/index.js"],"names":["React","Table","TableRow","TableCell","makeStyles","useStyles","table","minWidth","CampaignRow","props","rowData","amount","currencyCode","pricingLotId","quantity","scaleTicketId","lineItemNumber","contractId","deliveryTechnicalId","config","links","deliveryRoute","contractRouteMerch","currencyMapping","digitsAfterDecimal","currencyDigits","weightMapping","weightDigits","Campaigns","createData","name","calories","fat","carbs","protein","rows","classes","getHeader","label","align","settlementLineItems"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAUC,KAAV,EACCC,QADD,EAECC,SAFD,QAEmB,oBAFnB;AAGA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAC;AAC5BE,EAAAA,KAAK,EAAE;AACNC,IAAAA,QAAQ,EAAE;AADJ;AADqB,CAAD,CAA5B;AAMA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW;AACrC;AACA,QAAM;AACLC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,YAAV;AAAwBC,MAAAA,YAAxB;AAAsCC,MAAAA,QAAtC;AAAgDC,MAAAA,aAAhD;AAA+DC,MAAAA,cAA/D;AAA+EC,MAAAA,UAA/E;AAA2FC,MAAAA;AAA3F,QAAmH,EADvH;AAELC,IAAAA;AAFK,MAGFV,KAHJ;AAIA,QAAM;AACLW,IAAAA,KAAK,EAAE;AAAEC,MAAAA,aAAF;AAAiBC,MAAAA;AAAjB,QAAwC,EAD1C;AAELC,IAAAA,eAAe,EAAE;AAAEC,MAAAA,kBAAkB,EAAEC;AAAtB,QAAyC,EAFrD;AAGLC,IAAAA,aAAa,EAAE;AAAEF,MAAAA,kBAAkB,EAAEG;AAAtB,QAAuC;AAHjD,MAKLR,MAAM,IAAI,EALX;AASA,CAfM;;AAiBP,MAAMS,SAAS,GAAInB,KAAD,IAAW;AAC5B,WAASoB,UAAT,CAAoBC,IAApB,EAA0BC,QAA1B,EAAoCC,GAApC,EAAyCC,KAAzC,EAAgDC,OAAhD,EAAyD;AACxD,WAAO;AAAEJ,MAAAA,IAAF;AAAQC,MAAAA,QAAR;AAAkBC,MAAAA,GAAlB;AAAuBC,MAAAA,KAAvB;AAA8BC,MAAAA;AAA9B,KAAP;AACA;;AAED,QAAMC,IAAI,GAAG,CACZN,UAAU,CAAC,gBAAD,EAAmB,GAAnB,EAAwB,GAAxB,EAA6B,EAA7B,EAAiC,GAAjC,CADE,EAEZA,UAAU,CAAC,oBAAD,EAAuB,GAAvB,EAA4B,GAA5B,EAAiC,EAAjC,EAAqC,GAArC,CAFE,EAGZA,UAAU,CAAC,QAAD,EAAW,GAAX,EAAgB,IAAhB,EAAsB,EAAtB,EAA0B,GAA1B,CAHE,EAIZA,UAAU,CAAC,SAAD,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,EAAtB,EAA0B,GAA1B,CAJE,EAKZA,UAAU,CAAC,aAAD,EAAgB,GAAhB,EAAqB,IAArB,EAA2B,EAA3B,EAA+B,GAA/B,CALE,CAAb;AAOG,QAAMO,OAAO,GAAG/B,SAAS,EAAzB;;AAEA,QAAMgC,SAAS,GAAG,MAAM,CAAE;AAAEC,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,KAAK,EAAE;AAAxB,GAAF,EAAoC,WAApC,EAAiD,MAAjD,EAAyD,SAAzD,CAAxB,CAdyB,CAiB5B;;;AACA,sBACD,oBAAC,KAAD;AACI,IAAA,eAAe,EAAC,OADpB;AAEI,IAAA,QAAQ,EAAEC,mBAFd;AAGI,IAAA,MAAM,EAAEH,SAAS,EAHrB;AAII,IAAA,MAAM,EAAElB,MAJZ;AAKI,IAAA,SAAS,EAAEX,WALf;AAMI,IAAA,eAAe,EAAC,OANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC;AAUA,CA5BD;;AA6BA,eAAeoB,SAAf","sourcesContent":["import React from 'react';\nimport { \tTable,\n\tTableRow,\n\tTableCell, } from '../../common/Table';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n\ttable: {\n\t\tminWidth: 650\n\t}\n});\n\nexport const CampaignRow = (props) => {\n\t// Destructure Incoming props.\n\tconst {\n\t\trowData: { amount, currencyCode, pricingLotId, quantity, scaleTicketId, lineItemNumber, contractId, deliveryTechnicalId } = {},\n\t\tconfig\n\t} = props;\n\tconst {\n\t\tlinks: { deliveryRoute, contractRouteMerch } = {},\n\t\tcurrencyMapping: { digitsAfterDecimal: currencyDigits } = {},\n\t\tweightMapping: { digitsAfterDecimal: weightDigits } = {}\n\t} =\n\t\tconfig || {};\n\n\t\n\n};\n\nconst Campaigns = (props) => {\n\tfunction createData(name, calories, fat, carbs, protein) {\n\t\treturn { name, calories, fat, carbs, protein };\n\t}\n\n\tconst rows = [\n\t\tcreateData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n\t\tcreateData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n\t\tcreateData('Eclair', 262, 16.0, 24, 6.0),\n\t\tcreateData('Cupcake', 305, 3.7, 67, 4.3),\n\t\tcreateData('Gingerbread', 356, 16.0, 49, 3.9)\n\t];\n    const classes = useStyles();\n      \n    const getHeader = () => [ { label: 'Date', align: 'left' }, 'Campaignn', 'View', 'Actions' ];\n\n\n\t// returns the UI for Settlement Table.\n\treturn (\n<Table\n\t\t\t\tcolumnAlignment=\"right\"\n\t\t\t\trowsData={settlementLineItems}\n\t\t\t\theader={getHeader()}\n\t\t\t\tconfig={config}\n\t\t\t\tcustomRow={CampaignRow}\n\t\t\t\ttableHeaderSize=\"small\"\n\t\t\t/>\n\t);\n};\nexport default Campaigns;\n"]},"metadata":{},"sourceType":"module"}