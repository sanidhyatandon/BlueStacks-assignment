{"ast":null,"code":"var _jsxFileName = \"/Users/santando/xlbas-project/src/components/Campaigns/index.js\";\n\n/* eslint-disable no-undef */\nimport React from 'react';\nimport moment from 'moment';\nimport { Table, TableRow, TableCell } from '../../common/Table';\nexport const CampaignRow = props => {\n  // Destructure Incoming props.\n  const {\n    rowData: {\n      createdOn,\n      csv,\n      image_url,\n      name,\n      price,\n      region,\n      report\n    } = {},\n    rowProps: {\n      actions: {\n        toggleModal\n      } = {}\n    } = {}\n  } = props;\n  const formattedDate = moment(createdOn).format('MMM YYYY, DD');\n  const relativeDate = moment(createdOn).fromNow();\n  console.log(moment(createdOn).fromNow());\n  return /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    width: \"20%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, formattedDate, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-small text-gray\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, relativeDate))), /*#__PURE__*/React.createElement(TableCell, {\n    width: \"20%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    width: 30,\n    height: 30,\n    src: image_url,\n    alt: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ml-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, name, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-small text-gray\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, region)))), /*#__PURE__*/React.createElement(TableCell, {\n    width: \"20%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn-link\",\n    onClick: this.toggleModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"View Pricing\")), /*#__PURE__*/React.createElement(TableCell, {\n    width: \"60%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"this is good\"));\n};\n\nconst Campaigns = props => {\n  // returns the UI for Campaigns Table.\n  const getHeader = () => ['DATE', 'CAMPAIGN', 'VIEW', 'ACTIONS'];\n\n  const {\n    campaigns = [],\n    actions = {}\n  } = props;\n  return /*#__PURE__*/React.createElement(Table, {\n    rowProps: actions,\n    rowsData: campaigns,\n    header: getHeader(),\n    customRow: CampaignRow,\n    tableHeaderSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default Campaigns;","map":{"version":3,"sources":["/Users/santando/xlbas-project/src/components/Campaigns/index.js"],"names":["React","moment","Table","TableRow","TableCell","CampaignRow","props","rowData","createdOn","csv","image_url","name","price","region","report","rowProps","actions","toggleModal","formattedDate","format","relativeDate","fromNow","console","log","Campaigns","getHeader","campaigns"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,oBAA3C;AAEA,OAAO,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAClC;AACA,QAAM;AACJC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,SAAF;AAAaC,MAAAA,GAAb;AAAkBC,MAAAA,SAAlB;AAA6BC,MAAAA,IAA7B;AAAmCC,MAAAA,KAAnC;AAA0CC,MAAAA,MAA1C;AAAkDC,MAAAA;AAAlD,QAA6D,EADlE;AAEJC,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAEC,QAAAA;AAAF,UAAkB;AAA7B,QAAoC;AAF1C,MAGFX,KAHJ;AAIA,QAAMY,aAAa,GAAGjB,MAAM,CAACO,SAAD,CAAN,CAAkBW,MAAlB,CAAyB,cAAzB,CAAtB;AACA,QAAMC,YAAY,GAAGnB,MAAM,CAACO,SAAD,CAAN,CAAkBa,OAAlB,EAArB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYtB,MAAM,CAACO,SAAD,CAAN,CAAkBa,OAAlB,EAAZ;AACA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,0CACGH,aADH,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAM,IAAA,SAAS,EAAC,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwCE,YAAxC,CAHF,CADF,CADF,eAQE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAE,EAAZ;AAAgB,IAAA,MAAM,EAAE,EAAxB;AAA4B,IAAA,GAAG,EAAEV,SAAjC;AAA4C,IAAA,GAAG,EAAEC,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IADH,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAM,IAAA,SAAS,EAAC,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwCE,MAAxC,CAHF,CAFF,CADF,CARF,eAkBE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,UAAlB;AAA6B,IAAA,OAAO,EAAE,KAAKI,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CAlBF,eAuBE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAvBF,CADF;AA2BD,CArCM;;AAuCP,MAAMO,SAAS,GAAGlB,KAAK,IAAI;AACzB;AAEA,QAAMmB,SAAS,GAAG,MAAM,CAAC,MAAD,EAAS,UAAT,EAAqB,MAArB,EAA6B,SAA7B,CAAxB;;AAEA,QAAM;AAAEC,IAAAA,SAAS,GAAG,EAAd;AAAkBV,IAAAA,OAAO,GAAG;AAA5B,MAAmCV,KAAzC;AACA,sBACE,oBAAC,KAAD;AACE,IAAA,QAAQ,EAAEU,OADZ;AAEE,IAAA,QAAQ,EAAEU,SAFZ;AAGE,IAAA,MAAM,EAAED,SAAS,EAHnB;AAIE,IAAA,SAAS,EAAEpB,WAJb;AAKE,IAAA,eAAe,EAAC,OALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AASD,CAfD;;AAgBA,eAAemB,SAAf","sourcesContent":["/* eslint-disable no-undef */\nimport React from 'react';\nimport moment from 'moment';\nimport { Table, TableRow, TableCell } from '../../common/Table';\n\nexport const CampaignRow = props => {\n  // Destructure Incoming props.\n  const {\n    rowData: { createdOn, csv, image_url, name, price, region, report } = {},\n    rowProps: { actions: { toggleModal } = {} } = {}\n  } = props;\n  const formattedDate = moment(createdOn).format('MMM YYYY, DD');\n  const relativeDate = moment(createdOn).fromNow();\n\n  console.log(moment(createdOn).fromNow());\n  return (\n    <TableRow>\n      <TableCell width=\"20%\">\n        <>\n          {formattedDate}\n          <br />\n          <span className=\"text-small text-gray\">{relativeDate}</span>\n        </>\n      </TableCell>\n      <TableCell width=\"20%\">\n        <div className=\"flex\">\n          <img width={30} height={30} src={image_url} alt={name} />\n          <div className=\"ml-8\">\n            {name}\n            <br />\n            <span className=\"text-small text-gray\">{region}</span>\n          </div>\n        </div>\n      </TableCell>\n      <TableCell width=\"20%\">\n        <button className=\"btn-link\" onClick={this.toggleModal}>\n          View Pricing\n        </button>\n      </TableCell>\n      <TableCell width=\"60%\">this is good</TableCell>\n    </TableRow>\n  );\n};\n\nconst Campaigns = props => {\n  // returns the UI for Campaigns Table.\n\n  const getHeader = () => ['DATE', 'CAMPAIGN', 'VIEW', 'ACTIONS'];\n\n  const { campaigns = [], actions = {} } = props;\n  return (\n    <Table\n      rowProps={actions}\n      rowsData={campaigns}\n      header={getHeader()}\n      customRow={CampaignRow}\n      tableHeaderSize=\"small\"\n    />\n  );\n};\nexport default Campaigns;\n"]},"metadata":{},"sourceType":"module"}