{"ast":null,"code":"var _jsxFileName = \"/Users/santando/xlbas-project/src/components/Campaigns/index.js\";\n\n/* eslint-disable no-undef */\nimport React from 'react';\nimport moment from 'moment';\nimport { Table, TableRow, TableCell } from '../../common/Table';\nexport const CampaignRow = props => {\n  // Destructure Incoming props.\n  const {\n    rowData: {\n      createdOn,\n      csv,\n      image_url,\n      name,\n      price,\n      region,\n      report\n    } = {},\n    config\n  } = props;\n  const formattedDate = moment(createdOn).format('MMM YYYY, DD');\n  const todayDate = moment().format('MMM YYYY, DD');\n  console.log(new Date(todayDate).setHours(0, 0, 0, 0) - formattedDate.setHours(0, 0, 0, 0));\n  const relativeDate = moment(createdOn).fromNow();\n  console.log(moment(createdOn).fromNow());\n  return /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    width: \"20%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, formattedDate, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-small text-gray\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, relativeDate))), /*#__PURE__*/React.createElement(TableCell, {\n    width: \"20%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    width: 30,\n    height: 30,\n    src: image_url,\n    alt: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ml-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, name, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-small text-gray\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, region)))), /*#__PURE__*/React.createElement(TableCell, {\n    width: \"20%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"View Pricing\")), /*#__PURE__*/React.createElement(TableCell, {\n    width: \"60%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"this is good\"));\n};\n\nconst Campaigns = props => {\n  // returns the UI for Campaigns Table.\n  const getHeader = () => ['DATE', 'CAMPAIGN', 'VIEW', 'ACTIONS'];\n\n  const {\n    data = []\n  } = props;\n  return /*#__PURE__*/React.createElement(Table, {\n    rowsData: data,\n    header: getHeader(),\n    customRow: CampaignRow,\n    tableHeaderSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 10\n    }\n  });\n};\n\nexport default Campaigns;","map":{"version":3,"sources":["/Users/santando/xlbas-project/src/components/Campaigns/index.js"],"names":["React","moment","Table","TableRow","TableCell","CampaignRow","props","rowData","createdOn","csv","image_url","name","price","region","report","config","formattedDate","format","todayDate","console","log","Date","setHours","relativeDate","fromNow","Campaigns","getHeader","data"],"mappings":"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","sourcesContent":["/* eslint-disable no-undef */\nimport React from 'react';\nimport moment from 'moment';\nimport { Table, TableRow, TableCell } from '../../common/Table';\n\nexport const CampaignRow = props => {\n  // Destructure Incoming props.\n  const { rowData: { createdOn, csv, image_url, name, price, region, report } = {}, config } = props;\n  const formattedDate = moment(createdOn).format('MMM YYYY, DD');\n  const todayDate = moment().format('MMM YYYY, DD');\n  console.log(new Date(todayDate).setHours(0,0,0,0) - formattedDate.setHours(0,0,0,0))\n  const relativeDate = moment(createdOn).fromNow();\n\n  console.log(moment(createdOn).fromNow());\n  return (\n    <TableRow>\n      <TableCell width=\"20%\">\n        <>\n          {formattedDate}\n          <br />\n          <span className=\"text-small text-gray\">{relativeDate}</span>\n        </>\n      </TableCell>\n      <TableCell width=\"20%\">\n        <div className=\"flex\">\n          <img width={30} height={30} src={image_url} alt={name} />\n          <div className=\"ml-8\">\n            {name}\n            <br />\n            <span className=\"text-small text-gray\">{region}</span>\n          </div>\n        </div>\n      </TableCell>\n      <TableCell width=\"20%\">\n        <button className=\"btn-link\">View Pricing</button>\n      </TableCell>\n      <TableCell width=\"60%\">this is good</TableCell>\n    </TableRow>\n  );\n};\n\nconst Campaigns = props => {\n  // returns the UI for Campaigns Table.\n\n  const getHeader = () => ['DATE', 'CAMPAIGN', 'VIEW', 'ACTIONS'];\n\n  const { data = [] } = props;\n  return <Table rowsData={data} header={getHeader()} customRow={CampaignRow} tableHeaderSize=\"small\" />;\n};\nexport default Campaigns;\n"]},"metadata":{},"sourceType":"module"}