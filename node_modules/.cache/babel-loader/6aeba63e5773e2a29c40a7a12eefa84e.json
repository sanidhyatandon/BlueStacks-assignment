{"ast":null,"code":"var _jsxFileName = \"/Users/santando/xlbas-project/src/components/Campaigns/index.js\";\n\n/* eslint-disable no-undef */\nimport React, { useState } from 'react';\nimport moment from 'moment';\nimport DatePicker from 'react-date-picker';\nimport { Modal } from '@material-ui/core';\nimport { MdInsertDriveFile, MdGraphicEq } from 'react-icons/md';\nimport { GoCalendar } from 'react-icons/go';\nimport { Table, TableRow, TableCell } from '../../common/Table';\nimport './index.scss';\nexport const CampaignRow = props => {\n  // Destructure Incoming props.\n  const {\n    rowData: {\n      schedcreatedOn,\n      csv,\n      image_url,\n      name,\n      price,\n      region,\n      report\n    } = {}\n  } = props;\n  const formattedDate = moment(createdOn).format('MMM YYYY, DD');\n  const relativeDate = moment(createdOn).fromNow();\n  const [pricingModalOpen, setPricingModalOpen] = React.useState(false);\n  const [date, setDate] = useState(new Date());\n  const [datePickerOpen, setDatePickerOpen] = useState(false);\n\n  const scheduleCampaignHandler = () => {};\n\n  const handlePricingModalOpen = () => {\n    setPricingModalOpen(true);\n  };\n\n  const handlePricingModalClose = () => {\n    setPricingModalOpen(false);\n  };\n\n  const handleDatePickerOpen = () => {\n    setDatePickerOpen(true);\n  };\n\n  const handleDatePickerClose = () => {\n    setDatePickerOpen(false);\n  };\n\n  const priceLabels = ['1 week - 1 Month', '6 Months', '1 Year'];\n  const priceValueLabels = ['monthly', 'halfYearly', 'annually'];\n  const body = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex mb-32\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    width: 80,\n    height: 80,\n    src: image_url,\n    alt: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ml-32\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, name, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-small text-gray\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, region))), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"Pricing\"), !!price && !!price.length && price.map((elem, index) => /*#__PURE__*/React.createElement(\"dl\", {\n    className: \"pricing flex mb-64\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"dt\", {\n    className: \"flex--1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, priceLabels[index]), /*#__PURE__*/React.createElement(\"dd\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, elem[priceValueLabels[index]]))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handlePricingModalClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, \"Close Modal\"));\n  const datePicker = /*#__PURE__*/React.createElement(DatePicker, {\n    isOpen: datePickerOpen,\n    onChange: scheduleCampaignHandler,\n    value: date,\n    onCalendarClose: handleDatePickerClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    width: \"20%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, formattedDate, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-small text-gray\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, relativeDate))), /*#__PURE__*/React.createElement(TableCell, {\n    width: \"20%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    width: 30,\n    height: 30,\n    src: image_url,\n    alt: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ml-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, name, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-small text-gray\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, region)))), /*#__PURE__*/React.createElement(TableCell, {\n    width: \"20%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn-link\",\n    onClick: handlePricingModalOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \"View Pricing\"), /*#__PURE__*/React.createElement(Modal, {\n    open: pricingModalOpen,\n    onClose: handlePricingModalClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, body)), /*#__PURE__*/React.createElement(TableCell, {\n    width: \"60%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MdInsertDriveFile, {\n    size: 20,\n    className: \"pointer mr-8\",\n    color: \"#16a769\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"mr-20 small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, \"CSV\"), /*#__PURE__*/React.createElement(MdGraphicEq, {\n    size: 20,\n    className: \"pointer mr-8\",\n    color: \"#16a769\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"mr-20 small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, \"Report\"), /*#__PURE__*/React.createElement(GoCalendar, {\n    size: 20,\n    className: \"pointer mr-2\",\n    color: \"#16a769\",\n    onClick: handleDatePickerOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"mr-20 small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, \"Schedule Again\"), /*#__PURE__*/React.createElement(Modal, {\n    open: datePickerOpen,\n    onClose: handleDatePickerClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, datePicker)))));\n};\n\nconst Campaigns = props => {\n  // returns the UI for Campaigns Table.\n  const getHeader = () => ['DATE', 'CAMPAIGN', 'VIEW', 'ACTIONS'];\n\n  const {\n    campaigns = []\n  } = props;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Table, {\n    rowsData: campaigns,\n    header: getHeader(),\n    customRow: CampaignRow,\n    tableHeaderSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Campaigns;","map":{"version":3,"sources":["/Users/santando/xlbas-project/src/components/Campaigns/index.js"],"names":["React","useState","moment","DatePicker","Modal","MdInsertDriveFile","MdGraphicEq","GoCalendar","Table","TableRow","TableCell","CampaignRow","props","rowData","schedcreatedOn","csv","image_url","name","price","region","report","formattedDate","createdOn","format","relativeDate","fromNow","pricingModalOpen","setPricingModalOpen","date","setDate","Date","datePickerOpen","setDatePickerOpen","scheduleCampaignHandler","handlePricingModalOpen","handlePricingModalClose","handleDatePickerOpen","handleDatePickerClose","priceLabels","priceValueLabels","body","length","map","elem","index","datePicker","Campaigns","getHeader","campaigns"],"mappings":"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","sourcesContent":["/* eslint-disable no-undef */\nimport React, { useState } from 'react';\nimport moment from 'moment';\nimport DatePicker from 'react-date-picker';\nimport { Modal } from '@material-ui/core';\nimport { MdInsertDriveFile, MdGraphicEq } from 'react-icons/md';\nimport { GoCalendar } from 'react-icons/go';\n\nimport { Table, TableRow, TableCell } from '../../common/Table';\n\nimport './index.scss';\n\nexport const CampaignRow = props => {\n  // Destructure Incoming props.\n  const { rowData: { schedcreatedOn, csv, image_url, name, price, region, report } = {} } = props;\n  const formattedDate = moment(createdOn).format('MMM YYYY, DD');\n  const relativeDate = moment(createdOn).fromNow();\n\n  const [pricingModalOpen, setPricingModalOpen] = React.useState(false);\n  const [date, setDate] = useState(new Date());\n  const [datePickerOpen, setDatePickerOpen] = useState(false);\n\n  const scheduleCampaignHandler =()=>{\n\n  }\n\n  const handlePricingModalOpen = () => {\n    setPricingModalOpen(true);\n  };\n\n  const handlePricingModalClose = () => {\n    setPricingModalOpen(false);\n  };\n\n  const handleDatePickerOpen = () => {\n    setDatePickerOpen(true);\n  };\n\n  const handleDatePickerClose = () => {\n    setDatePickerOpen(false);\n  };\n\n  const priceLabels = ['1 week - 1 Month', '6 Months', '1 Year'];\n  const priceValueLabels = ['monthly', 'halfYearly', 'annually'];\n\n  const body = (\n    <div className=\"modal-body\">\n      <div className=\"flex mb-32\">\n        <img width={80} height={80} src={image_url} alt={name} />\n        <div className=\"ml-32\">\n          {name}\n          <br />\n          <span className=\"text-small text-gray\">{region}</span>\n        </div>\n      </div>\n      <h4>Pricing</h4>\n      {!!price &&\n        !!price.length &&\n        price.map((elem, index) => (\n          <dl className=\"pricing flex mb-64\">\n            <dt className=\"flex--1\">{priceLabels[index]}</dt>\n            <dd>{elem[priceValueLabels[index]]}</dd>\n          </dl>\n        ))}\n      <button type=\"button\" onClick={handlePricingModalClose}>\n        Close Modal\n      </button>\n    </div>\n  );\n\n  const datePicker = (\n    <DatePicker isOpen={datePickerOpen} onChange={scheduleCampaignHandler} value={date} onCalendarClose={handleDatePickerClose} />\n  );\n\n  return (\n    <>\n      <TableRow>\n        <TableCell width=\"20%\">\n          <>\n            {formattedDate}\n            <br />\n            <span className=\"text-small text-gray\">{relativeDate}</span>\n          </>\n        </TableCell>\n        <TableCell width=\"20%\">\n          <div className=\"flex\">\n            <img width={30} height={30} src={image_url} alt={name} />\n            <div className=\"ml-8\">\n              {name}\n              <br />\n              <span className=\"text-small text-gray\">{region}</span>\n            </div>\n          </div>\n        </TableCell>\n        <TableCell width=\"20%\">\n          <button className=\"btn-link\" onClick={handlePricingModalOpen}>\n            View Pricing\n          </button>\n          <Modal open={pricingModalOpen} onClose={handlePricingModalClose}>\n            {body}\n          </Modal>\n        </TableCell>\n        <TableCell width=\"60%\">\n          <div class=\"flex\">\n            <MdInsertDriveFile size={20} className=\"pointer mr-8\" color=\"#16a769\" />\n            <label className=\"mr-20 small\">CSV</label>\n            <MdGraphicEq size={20} className=\"pointer mr-8\" color=\"#16a769\" />\n            <label className=\"mr-20 small\">Report</label>\n            <GoCalendar size={20} className=\"pointer mr-2\" color=\"#16a769\" onClick={handleDatePickerOpen} />\n            <label className=\"mr-20 small\">Schedule Again</label>\n            <Modal open={datePickerOpen} onClose={handleDatePickerClose}>\n              {datePicker}\n            </Modal>\n          </div>\n        </TableCell>\n      </TableRow>\n    </>\n  );\n};\n\nconst Campaigns = props => {\n  // returns the UI for Campaigns Table.\n\n  const getHeader = () => ['DATE', 'CAMPAIGN', 'VIEW', 'ACTIONS'];\n\n  const { campaigns = [] } = props;\n\n  return (\n    <>\n      <Table rowsData={campaigns} header={getHeader()} customRow={CampaignRow} tableHeaderSize=\"small\" />\n    </>\n  );\n};\nexport default Campaigns;\n"]},"metadata":{},"sourceType":"module"}