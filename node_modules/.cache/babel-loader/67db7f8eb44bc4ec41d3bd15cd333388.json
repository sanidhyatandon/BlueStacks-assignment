{"ast":null,"code":"var _jsxFileName = \"/Users/santando/xlbas-project/src/containers/Dashboard/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport apiConfig from '../../api.config';\nimport DashboardView from '../../components/Dashboard';\nimport Loader from '../../common/Loader';\n\nconst Dashboard = () => {\n  const [campaigns, setCampaigns] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const scheduleCampaign = (id, value) => {\n    console.log(id);\n    let targetCampaignIndex = campaigns.findIndex(campaign => campaign.scheduleId === id);\n    campaigns[targetCampaignIndex].createdOn = value;\n    setCampaigns([...campaigns, targetCampaign]); // targetCampaign.createdOn = value;\n    // setCampaigns(...campaigns, targetCampaign)\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    const {\n      getCampaigns: {\n        url: getCampaignsURL\n      }\n    } = apiConfig;\n    fetch(getCampaignsURL).then(response => response.json()).then(data => {\n      setCampaigns(data);\n      setIsLoading(false);\n    }).catch(error => console.log(error));\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"campaign-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, campaigns && campaigns.length ? /*#__PURE__*/React.createElement(DashboardView, {\n    campaigns: campaigns,\n    scheduleCampaign: scheduleCampaign,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, \" No Data Available\")), isLoading && /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/santando/xlbas-project/src/containers/Dashboard/index.js"],"names":["React","useState","useEffect","apiConfig","DashboardView","Loader","Dashboard","campaigns","setCampaigns","isLoading","setIsLoading","scheduleCampaign","id","value","console","log","targetCampaignIndex","findIndex","campaign","scheduleId","createdOn","targetCampaign","getCampaigns","url","getCampaignsURL","fetch","then","response","json","data","catch","error","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,IAAD,CAA1C;;AAEA,QAAMU,gBAAgB,GAAG,CAACC,EAAD,EAAKC,KAAL,KAAe;AACtCC,IAAAA,OAAO,CAACC,GAAR,CAAYH,EAAZ;AACA,QAAII,mBAAmB,GAAGT,SAAS,CAACU,SAAV,CAAoBC,QAAQ,IAAIA,QAAQ,CAACC,UAAT,KAAwBP,EAAxD,CAA1B;AACAL,IAAAA,SAAS,CAACS,mBAAD,CAAT,CAA+BI,SAA/B,GAA2CP,KAA3C;AACAL,IAAAA,YAAY,CAAC,CAAC,GAAGD,SAAJ,EAAgBc,cAAhB,CAAD,CAAZ,CAJsC,CAMtC;AACA;AACD,GARD;;AAUAnB,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAM;AACJY,MAAAA,YAAY,EAAE;AAAEC,QAAAA,GAAG,EAAEC;AAAP;AADV,QAEFrB,SAFJ;AAGAsB,IAAAA,KAAK,CAACD,eAAD,CAAL,CACGE,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZrB,MAAAA,YAAY,CAACqB,IAAD,CAAZ;AACAnB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KALH,EAMGoB,KANH,CAMSC,KAAK,IAAIjB,OAAO,CAACC,GAAR,CAAYgB,KAAZ,CANlB;AAOD,GAZQ,EAYN,EAZM,CAAT;AAcA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGxB,SAAS,IAAIA,SAAS,CAACyB,MAAvB,gBACC,oBAAC,aAAD;AAAe,IAAA,SAAS,EAAEzB,SAA1B;AAAqC,IAAA,gBAAgB,EAAEI,gBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,gBAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJJ,CADF,EAQGF,SAAS,iBAAI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARhB,CADF;AAYD,CAxCD;;AA0CA,eAAeH,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport apiConfig from '../../api.config';\nimport DashboardView from '../../components/Dashboard';\n\nimport Loader from '../../common/Loader';\n\nconst Dashboard = () => {\n  const [campaigns, setCampaigns] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const scheduleCampaign = (id, value) => {\n    console.log(id);\n    let targetCampaignIndex = campaigns.findIndex(campaign => campaign.scheduleId === id);\n    campaigns[targetCampaignIndex].createdOn = value;\n    setCampaigns([...campaigns,  targetCampaign ]);\n\n    // targetCampaign.createdOn = value;\n    // setCampaigns(...campaigns, targetCampaign)\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    const {\n      getCampaigns: { url: getCampaignsURL }\n    } = apiConfig;\n    fetch(getCampaignsURL)\n      .then(response => response.json())\n      .then(data => {\n        setCampaigns(data);\n        setIsLoading(false);\n      })\n      .catch(error => console.log(error));\n  }, []);\n\n  return (\n    <div>\n      <div className=\"campaign-list\">\n        {campaigns && campaigns.length ? (\n          <DashboardView campaigns={campaigns} scheduleCampaign={scheduleCampaign} />\n        ) : (\n          <div> No Data Available</div>\n        )}\n      </div>\n      {isLoading && <Loader />}\n    </div>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}