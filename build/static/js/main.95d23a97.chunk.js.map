{"version":3,"sources":["api.config.js","common/Tab/index.js","common/Tabs/index.js","common/utilities.js","constants.js","common/Table/index.js","common/customHooks/useToggle.js","components/Campaigns/index.js","common/LanguageSelector/index.js","components/Dashboard/index.js","containers/Dashboard/index.js","routes/routing.js","i18n.js","App.js","serviceWorker.js","index.js"],"names":["config","getCampaigns","retry","interval","timeout","url","Tab","onClick","props","label","this","activeTab","tabTitle","className","classnames","Component","Tabs","onClickTabItem","tab","setState","children","state","map","child","index","key","checkDateStatus","date2","status","result","Date","setHours","Number","isMobileDevice","test","navigator","userAgent","setAlignment","aligmentProp","align","TableCell","cellData","width","paddingLevelY","paddingLevelX","otherProps","desktop","mobile","tableCellClasses","style","minWidth","defaultProps","showNoDataState","TableRow","rowData","tableCellClassName","columnAlignment","columns","rowProps","tableRowClasses","allChild","React","Children","toArray","cloneElement","length","htmlProps","Object","values","celldata","TableHeaderCell","headerCelldata","paddingLevelHeaderY","paddingLevelHeaderX","headerClasses","headerLabel","desc","TableHeader","header","tableHeaderCellClassName","tableHeaderClasses","idx","Table","rowsData","customRow","customHeader","noBorder","noLastBorder","tableClassName","tableHeaderClassName","tableRowClassName","tableBodyClassName","tableBodySize","tableHeaderSize","RowComponent","HeaderComponent","tableClasses","useToggle","initialValue","useState","value","setValue","toggle","useCallback","v","CampaignRow","t","useTranslation","isMobile","campaignId","createdOn","image_url","name","price","region","scheduleCampaign","formattedDate","moment","format","relativeDate","fromNow","pricingModalOpen","setPricingModal","datePickerOpen","setDatePicker","priceLabels","priceValueLabels","body","src","alt","elem","type","datePicker","isOpen","onChange","newDate","timeStamp","onCalendarClose","height","Modal","open","onClose","Campaigns","campaigns","LanguageSelector","i18n","event","changeLanguage","target","defaultChecked","Dashboard","liveCampaigns","filter","campaign","pastCampaigns","upcomingCampaigns","setCampaigns","campaignsLoading","setCampaignsLoading","useEffect","getCampaignsURL","apiConfig","axios","get","then","data","catch","error","console","log","position","top","left","id","targetCampaignIndex","findIndex","requestPayload","routes","exact","path","component","use","Backend","initReactI18next","init","lng","fallbackLng","debug","backend","loadPath","ns","defaultNS","keySeparator","interpolation","escapeValue","formatSeparator","react","wait","history","createBrowserHistory","App","fallback","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.95d23a97.chunk.js","sourcesContent":["const MOCK_SERVICE = 'https://my-json-server.typicode.com/sanidhyatandon/blustacks-server';\n\nconst defaultValues = {\n  retry: 0,\n  interval: 0,\n  timeout: 2000\n};\n\nconst config = {\n  // Current User\n  getCampaigns: {\n    ...defaultValues,\n    url: `${MOCK_SERVICE}/campaignList`\n  }\n};\n\nexport default config;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nclass Tab extends Component {\n  static propTypes = {\n    activeTab: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n  };\n\n  onClick = () => {\n    const { label, onClick } = this.props;\n    onClick(label);\n  };\n\n  render() {\n    const {\n      onClick,\n      props: { activeTab, label, tabTitle }\n    } = this;\n\n    return (\n      <li className={classnames('tab-list-item', activeTab === label && 'tab-list-active')} onClick={onClick}>\n        {tabTitle}\n      </li>\n    );\n  }\n}\n\nexport default Tab;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Tab from '../Tab';\nclass Tabs extends Component {\n  // Proptypes.\n  static propTypes = {\n    children: PropTypes.instanceOf(Array).isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    // Deconstruct 0th elemnt from children.\n    const [activeChild] = this.props.children;\n\n    const {\n      props: { label }\n    } = activeChild;\n\n    this.state = {\n      activeTab: label\n    };\n  }\n\n  // on click Tab Handler.\n  onClickTabItem = tab => {\n    this.setState({ activeTab: tab });\n  };\n\n  render() {\n    const {\n      onClickTabItem,\n      props: { children },\n      state: { activeTab }\n    } = this;\n\n    return (\n      <div className=\"tabs\">\n        <ol className=\"tab-list\">\n          {children.map((child, index) => {\n            const { label, tabTitle } = child.props;\n\n            return (\n              <Tab\n                activeTab={activeTab}\n                key={`${label}-${index}`}\n                label={label}\n                tabTitle={tabTitle}\n                onClick={onClickTabItem}\n              />\n            );\n          })}\n        </ol>\n        <div className=\"tab-content\">\n          {children.map(child => {\n            const {\n              props: { label, children }\n            } = child;\n            if (label !== activeTab) return null;\n            return children;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Tabs;\n","import { LIVE, PAST, UPCOMING } from '../constants';\nconst checkDateStatus = date2 => {\n  let status;\n  const result = new Date().setHours(0, 0, 0, 0) - new Date(Number(date2)).setHours(0, 0, 0, 0);\n\n  switch (result > 0) {\n    case true:\n      status = PAST;\n      break;\n    case false:\n      switch (result < 0) {\n        case true:\n          status = UPCOMING;\n          break;\n        case false:\n          status = LIVE;\n          break;\n        default: {\n          status = LIVE;\n        }\n      }\n      break;\n    default: {\n      status = LIVE;\n    }\n  }\n\n  return status;\n};\n\n/**\n * Check if its mobile device or not\n * @returns {boolean} empty or not\n */\nconst isMobileDevice = () => /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n\nexport { checkDateStatus, isMobileDevice };\n","export const routeFoodItemDetail = 'dishes';\nexport const searchPlaceholder = 'Search your Dish';\nexport const orderNow = 'Order Now';\nexport const cancel = 'Cancel';\nexport const filter = 'Filter Food';\nexport const LIVE = 'live';\nexport const PAST = 'past';\nexport const UPCOMING = 'upcoming';\n","import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport './table.scss';\n\nconst NO_DATA_STATE = '-';\n\n\nconst setAlignment = (aligmentProp, index) => {\n  let align = 'left';\n  if (aligmentProp === 'default' && index !== 0) {\n    align = 'right';\n  }\n\n  if (aligmentProp === 'right') {\n    align = 'right';\n  }\n\n  if (aligmentProp === 'center') {\n    align = 'center';\n  }\n\n  return align;\n};\n\n/**\n * TableCell component contains native td tag implementation with some classes to handle the padding horizontally/vertically\n * DataNot Available state can also be handled.\n * @param {TableCell~propTypes} props - TableCell props.\n * @returns {ReactElement}\n */\nconst TableCell = props => {\n  const { cellData, children, className, width, paddingLevelY, paddingLevelX, desktop, mobile, ...otherProps } = props;\n\n  const tableCellClasses = classnames('table-cell', `py-${paddingLevelY}x`, `px-${paddingLevelX}x`, className);\n  return (\n    <td className={tableCellClasses} style={{ minWidth: width, width }} {...otherProps}>\n      {children || cellData || NO_DATA_STATE}\n    </td>\n  );\n};\n\n/**\n * Complete props of TableCell.\n * @typedef {Object} TableCell~propTypes\n * @property {(string|node)} [cellData=''] This hold the data/node to be displayed on the cell.\n * @property {string} [className=''] className for the TableCell.\n * @property {string} [width='auto'] width for the Table Cell.\n * @property {number} [paddingLevelY=2] paddingLevelY for the tabelCell.\n * @property {number} [paddingLevelX=0] paddingLevelX for the tabelCell.\n * @property {(string|node)} [children=null] children for the Table Cell.\n * @property {bool} [mobile=false] - to be displayed only on mobile.\n * @property {bool} [desktop=false] - to be displayed only on desktop.\n */\nTableCell.propTypes = {\n  cellData: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  className: PropTypes.string,\n  width: PropTypes.string,\n  paddingLevelY: PropTypes.number,\n  paddingLevelX: PropTypes.number,\n  showNoDataState: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  mobile: PropTypes.bool,\n  desktop: PropTypes.bool\n};\n\nTableCell.defaultProps = {\n  cellData: '',\n  className: '',\n  width: 'auto',\n  children: null,\n  showNoDataState: true,\n  paddingLevelY: 2,\n  paddingLevelX: 0,\n  mobile: false,\n  desktop: false\n};\n\n/**\n * This component is responsible to render the TableRow component, this is a default TableRow called\n * from the Table Component. default Columns can either be created from data or with rowProps.\n * @param {TableRow~propTypes} props - TableRow props.\n * @returns {ReactElement}\n */\nconst TableRow = props => {\n  const {\n    rowData,\n    children,\n    className,\n    tableCellClassName,\n    columnAlignment,\n    rowProps: { columns },\n    ...otherProps\n  } = props;\n  const tableRowClasses = classnames('table-row', className);\n  const allChild = React.Children.toArray(children);\n\n  return (\n    <tr className={tableRowClasses}>\n      {(children && allChild.map(child => React.cloneElement(child, { ...otherProps }))) ||\n        (columns && columns.length\n          ? columns.map(\n              ({ key, ...htmlProps }, index) =>\n                key && (\n                  <TableCell\n                    cellData={rowData[key]}\n                    key={`cell-${index}`}\n                    align={setAlignment(columnAlignment, index)}\n                    className={tableCellClassName}\n                    {...otherProps}\n                    {...htmlProps}\n                  />\n                )\n            )\n          : Object.values(rowData).map((celldata, index) => (\n              <TableCell cellData={celldata} key={`cell-${index}`} className={tableCellClassName} {...otherProps} />\n            )))}\n    </tr>\n  );\n};\n\n/**\n * Complete props of TableRow.\n * @typedef {Object} TableRow~propTypes\n * @property {Object} [rowData={}] This hold the rowData for the Row.\n * @property {string} [className=''] ClassName for the TableRow.\n * @property {string} [tableCellClassName = ''] tableCellClassName for table cell.\n * @property {string} columnAlignment columnAlignment for table cell.\n * @property {Object} [rowProps = {}] rowProps object for the TableRow.\n * @property {(string|node)} [children = null] Children for the Table Row.\n */\nTableRow.propTypes = {\n  rowData: PropTypes.instanceOf(Object),\n  className: PropTypes.string,\n  tableCellClassName: PropTypes.string,\n  columnAlignment: PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  rowProps: PropTypes.shape({\n    columns: PropTypes.arrayOf(PropTypes.instanceOf(Object))\n  })\n};\n\nTableRow.defaultProps = {\n  rowData: {},\n  className: '',\n  columnAlignment: 'default',\n  tableCellClassName: '',\n  children: null,\n  rowProps: {\n    columns: []\n  }\n};\n\n/**\n * TableHeaderCell component contains native th tag implementation, which can also be called from a custom Header component.\n * @param {TableHeaderCell~propTypes} props - TableHeaderCell props.\n * @returns {ReactElement}\n */\nconst TableHeaderCell = props => {\n  const {\n    headerCelldata,\n    children,\n    paddingLevelHeaderY,\n    paddingLevelHeaderX,\n    className,\n    desktop,\n    mobile,\n    ...otherProps\n  } = props;\n\n  const headerClasses = classnames(\n    'table-header-cell',\n    `py-${paddingLevelHeaderY}x`,\n    `px-${paddingLevelHeaderX}x`,\n    className\n  );\n  let headerLabel = headerCelldata;\n  let htmlProps = {};\n  if (typeof headerLabel === 'object') {\n    const { label, desc, ...remProps } = headerCelldata;\n    htmlProps = remProps;\n    headerLabel = label;\n  }\n  return (\n    headerLabel !== null && (\n      <th className={headerClasses} {...otherProps} {...htmlProps}>\n        {children || headerLabel}\n      </th>\n    )\n  );\n};\n\n/**\n * Complete props of TableHeaderCell.\n * @typedef {Object} TableHeaderCell~propTypes\n * @property {Object|string} [headerCelldata=''] This hold headerCelldata for the headerCell.\n * @property {string} [className=''] ClassName for TableHeader cell.\n * @property {(string|node)} [children=null] Children for the Table Row.\n * @property {number} [paddingLevelHeaderY=1] paddingLevelHeaderY for the TableHeaderCell.\n * @property {number} [paddingLevelHeaderX=0] paddingLevelHeaderX for the TableHeaderCell.\n * @property {bool} [mobile=false] - to be displayed only on mobile.\n * @property {bool} [desktop=false] - to be displayed only on desktop.\n */\nTableHeaderCell.propTypes = {\n  headerCelldata: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      label: PropTypes.string.isRequired\n    })\n  ]),\n  className: PropTypes.string,\n  paddingLevelHeaderY: PropTypes.number,\n  paddingLevelHeaderX: PropTypes.number,\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  mobile: PropTypes.bool,\n  desktop: PropTypes.bool\n};\n\nTableHeaderCell.defaultProps = {\n  headerCelldata: '',\n  className: '',\n  paddingLevelHeaderY: 1,\n  paddingLevelHeaderX: 0,\n  children: null,\n  mobile: false,\n  desktop: false\n};\n\n/**\n * TableHeader component contains native tr tag implementation and is generally a Default Header component which renders the Header for the Table.\n * @class\n * @param {TableHeader~propTypes} props - TableHeader props.\n * @returns {ReactElement}\n */\nconst TableHeader = props => {\n  const { header, children, className, columnAlignment, tableHeaderCellClassName, ...otherProps } = props;\n  const tableHeaderClasses = classnames('table-header', className);\n  const allChild = React.Children.toArray(children);\n  return (\n    <tr className={tableHeaderClasses}>\n      {(children && allChild.map(child => React.cloneElement(child, { ...otherProps }))) ||\n        header.map((headerCelldata, idx) => (\n          <TableHeaderCell\n            headerCelldata={headerCelldata}\n            key={`header-cell-${idx}`}\n            align={setAlignment(columnAlignment, idx)}\n            className={tableHeaderCellClassName}\n            {...otherProps}\n          />\n        ))}\n    </tr>\n  );\n};\n\n/**\n * Complete props of TableHeader.\n * @typedef {Object} TableHeader~propTypes\n *\n * @property {(string[]|Object[])} [header=[]] This is data for the tableHeader.\n * @property {string} [className=''] ClassName for TableHeader cell.\n * @property {string} [tableHeaderCellClassName=''] tableHeaderCellClassName.\n * @property {(string|node)} [children=null] Children for the Table Row.\n */\nTableHeader.propTypes = {\n  header: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Object)])),\n  className: PropTypes.string,\n  tableHeaderCellClassName: PropTypes.string,\n  columnAlignment: PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.node])\n};\n\nTableHeader.defaultProps = {\n  header: [],\n  className: '',\n  columnAlignment: 'default',\n  tableHeaderCellClassName: '',\n  children: null\n};\n\n/**\n * Table component is creating a table with defined header and data rows.\n * It consumes different components like TableHeader, TableRow and TableCell which can either be custom or default.\n * @class\n * @param {Table~propTypes} props - Table props.\n * @returns {ReactElement}\n */\nconst Table = props => {\n  const {\n    rowsData,\n    header,\n    customRow,\n    customHeader,\n    noBorder,\n    noLastBorder,\n    tableClassName,\n    tableHeaderClassName,\n    tableHeaderCellClassName,\n    tableRowClassName,\n    tableBodyClassName,\n    tableBodySize,\n    tableHeaderSize,\n    rowProps,\n    showNoDataState,\n    tableCellClassName,\n    paddingLevelHeaderX,\n    paddingLevelHeaderY,\n    paddingLevelX,\n    paddingLevelY,\n    ...otherProps\n  } = props;\n  const RowComponent = customRow || TableRow;\n  const HeaderComponent = customHeader || TableHeader;\n  const tableClasses = classnames(\n    'default-table',\n    noBorder && 'no-border',\n    noLastBorder && 'no-last-border',\n    tableClassName\n  );\n\n  return (\n    <div className=\"table-wrapper\">\n      <table className={tableClasses}>\n        {header && (\n          <thead className={classnames('table-head', `table-head-${tableHeaderSize}`)}>\n            <HeaderComponent\n              header={header}\n              className={tableHeaderClassName}\n              tableHeaderCellClassName={tableHeaderCellClassName}\n              paddingLevelHeaderX={paddingLevelHeaderX}\n              paddingLevelHeaderY={paddingLevelHeaderY}\n              {...otherProps}\n            />\n          </thead>\n        )}\n        <tbody className={classnames('table-body', tableBodyClassName, `table-body-${tableBodySize}`)}>\n          {rowsData.map((rowData, index) => (\n            <RowComponent\n              rowData={rowData}\n              key={`row-${index}`}\n              className={tableRowClassName}\n              rowProps={rowProps}\n              showNoDataState={showNoDataState}\n              tableCellClassName={tableCellClassName}\n              paddingLevelX={paddingLevelX}\n              paddingLevelY={paddingLevelY}\n              {...otherProps}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\n/**\n * Complete props of Table.\n * @typedef {Object} Table~propTypes\n *\n * @property {rowsData} - This is rowsData for the table.\n * @property {(string[]|Object[])} [header=null] Header as array of string or object.\n * @property {func} [customRow=null] CustomRow Component..\n * @property {func} [customHeader=null] CustomeHeader Component.\n * @property {bool} [noBorder=false] Flag for NoBorder variant.\n * @property {bool} [showNoDataState=false] Flag for NoData State.\n * @property {number} [paddingLevelHeaderY=1] PaddingLevelY for the TableHeaderCell.\n * @property {number} [paddingLevelHeaderX=0] PaddingLevelX for the TableHeaderCell.\n * @property {number} [paddingLevelY=2] PaddingLevelY for the TableBodyCell.\n * @property {number} [paddingLevelX=0] PaddingLevelX for the TableBodyCell.\n * @property {string} [tableClassName=''] This variable is used to override the default table styling.\n * @property {string} [tableHeaderClassName=''] This variable is used to override the default table header styling.\n * @property {string} [tableHeaderCellClassName=''] This variable is used to override the default table header cell styling.\n * @property {string} [tableRowClassName=''] This variable is used to override the default table row styling.\n * @property {string} [tableCellClassName=''] This variable is used to override the default table cell styling.\n * @property {string} [tableBodyClassName=''] This variable is used to override the default table body styling.\n * @property {bool} [noLastBorder=false] Flag for no last border variant.\n * @property {('small'|'medium'|'large')} [tableHeaderSize='medium'] This is used to set the size for Header.\n * @property {('default'|'left'|'right'|'center')} [columnAlignment='default'] This is used to set the alignment for each column.\n * @property {('small'|'medium'|'large')}  [tableBodySize='medium'] This is used to set the size for body content.\n * @property {object} [rowProps={}] Custom rows props for the rows.\n * @property {object} [columns=[]] Columns props for the rows\n */\nTable.propTypes = {\n  rowsData: PropTypes.arrayOf(PropTypes.instanceOf(Object)).isRequired,\n  header: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Object)])),\n  customRow: PropTypes.func,\n  customHeader: PropTypes.func,\n  noBorder: PropTypes.bool,\n  showNoDataState: PropTypes.bool,\n  paddingLevelHeaderY: PropTypes.number,\n  paddingLevelHeaderX: PropTypes.number,\n  paddingLevelY: PropTypes.number,\n  paddingLevelX: PropTypes.number,\n  tableClassName: PropTypes.string,\n  tableHeaderClassName: PropTypes.string,\n  tableHeaderCellClassName: PropTypes.string,\n  tableRowClassName: PropTypes.string,\n  tableCellClassName: PropTypes.string,\n  tableBodyClassName: PropTypes.string,\n  noLastBorder: PropTypes.bool,\n  tableHeaderSize: PropTypes.oneOf(['small', 'medium', 'large']),\n  columnAlignment: PropTypes.oneOf(['default', 'left', 'right', 'center']),\n  tableBodySize: PropTypes.oneOf(['small', 'medium', 'large']),\n  rowProps: PropTypes.shape({\n    columns: PropTypes.arrayOf(PropTypes.instanceOf(Object))\n  })\n};\n\nTable.defaultProps = {\n  header: null,\n  customRow: null,\n  customHeader: null,\n  noBorder: false,\n  showNoDataState: true,\n  paddingLevelHeaderY: 1,\n  paddingLevelHeaderX: 0,\n  paddingLevelY: 2,\n  paddingLevelX: 0,\n  tableClassName: '',\n  tableHeaderClassName: '',\n  tableHeaderCellClassName: '',\n  tableRowClassName: '',\n  tableCellClassName: '',\n  tableBodyClassName: '',\n  noLastBorder: false,\n  tableHeaderSize: 'medium',\n  tableBodySize: 'medium',\n  columnAlignment: 'default',\n  rowProps: {\n    columns: []\n  }\n};\nexport { Table, TableHeader, TableHeaderCell, TableRow, TableCell };\n","import { useState, useCallback } from 'react';\n\nconst useToggle = (initialValue = false) => {\n  const [value, setValue] = useState(initialValue);\n  const toggle = useCallback(() => {\n    setValue(v => !v);\n  }, []);\n  return [value, toggle];\n};\n\nexport default useToggle;\n","import React, { useState, useCallback } from 'react';\nimport classnames from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport moment from 'moment';\nimport DatePicker from 'react-date-picker';\nimport { Modal } from '@material-ui/core';\nimport { isMobileDevice } from '../../common/utilities';\n\nimport { Table, TableRow, TableCell } from '../../common/Table';\n// Using Toggle Custom Hook.\nimport useToggle from '../../common/customHooks/useToggle';\n\nimport './index.scss';\n\nexport const CampaignRow = props => {\n  const { t } = useTranslation();\n  const isMobile = isMobileDevice();\n\n  // Destructure Incoming props.\n  const {\n    rowData: { campaignId, createdOn, image_url, name, price, region } = {},\n    rowProps: { scheduleCampaign }\n  } = props;\n  const formattedDate = moment(Number(createdOn)).format('MMM YYYY, DD');\n\n  const relativeDate = moment(Number(createdOn)).fromNow();\n\n  const [pricingModalOpen, setPricingModal] = useToggle();\n  const [datePickerOpen, setDatePicker] = useToggle();\n  const scheduleCampaignHandler = value => {\n    const newDate = moment(value).format();\n    const timeStamp = moment(newDate).format('x');\n\n    scheduleCampaign(campaignId, timeStamp);\n  };\n\n  const priceLabels = ['1 week - 1 Month', '6 Months', '1 Year'];\n  const priceValueLabels = ['monthly', 'halfYearly', 'annually'];\n\n  const body = (\n    <div className=\"modal-body\">\n      <div className={!isMobile ? 'flex align-end' : 'align-center mb-16'}>\n        <img src={image_url} alt={name} className=\"ml-24 mt-24\" />\n        <div className=\"ml-16\">\n          <h2>{name}</h2>\n          <h3 className=\"text-gray mb-0\">{region}</h3>\n        </div>\n      </div>\n      <div className=\"ml-16 mr-24\">\n        <h2>{t('pricing')}</h2>\n        {!!price &&\n          !!price.length &&\n          price.map((elem, index) => (\n            <dl className=\"pricing flex mb-64\" key={`elem-${index}`}>\n              <dt className=\"flex--1\">{priceLabels[index]}</dt>\n              <dd>{elem[priceValueLabels[index]]}</dd>\n            </dl>\n          ))}\n      </div>\n      <button type=\"button\" onClick={setPricingModal}>\n        {t('closeModal')}\n      </button>\n    </div>\n  );\n\n  const datePicker = (\n    <DatePicker\n      isOpen={datePickerOpen}\n      onChange={scheduleCampaignHandler}\n      value={new Date()}\n      onCalendarClose={setDatePicker}\n    />\n  );\n\n  return (\n    <>\n      <TableRow>\n        <TableCell width=\"20%\">\n          <>\n            {formattedDate}\n            <br />\n            <span className=\"text-small text-gray\">{relativeDate}</span>\n          </>\n        </TableCell>\n        <TableCell width=\"20%\">\n          <div className={!isMobile && 'flex'}>\n            <img width={40} height={40} src={image_url} alt={name} />\n            <div className={!isMobile && 'ml-8'}>\n              {name}\n              <br />\n              <span className=\"text-small text-gray\">{region}</span>\n            </div>\n          </div>\n        </TableCell>\n        <TableCell width=\"20%\">\n          <div className={classnames(isMobile ? 'align-center' : 'flex flex-center')}>\n            <img src=\"price.png\" width={20} height={20} alt=\"price\" className={classnames(!isMobile && 'mr-8')} />\n            <button className=\"btn-link\" onClick={setPricingModal}>\n              {t('viewPricing')}\n            </button>\n          </div>\n          <Modal open={pricingModalOpen} onClose={setPricingModal}>\n            {body}\n          </Modal>\n        </TableCell>\n        <TableCell width=\"60%\">\n          <div className={!isMobile && 'flex'}>\n            <div className={classnames(isMobile ? 'mb-8' : 'flex flex-center')}>\n              <img src=\"file.png\" width={20} height={20} alt=\"report\" className=\"pointer mr-8\" />\n              <label className=\"mr-24 small\">CSV</label>\n            </div>\n            <div className={classnames(isMobile ? 'mb-8' : 'flex flex-center')}>\n              <img src=\"statistics-report.png\" width={20} height={20} alt=\"file\" className=\"pointer mr-8\" />\n              <label className=\"mr-24 small\">{t('report')}</label>\n            </div>\n            <div className={classnames(isMobile ? 'mb-8' : 'flex flex-center')}>\n              <img\n                src=\"calendar.png\"\n                width={20}\n                height={20}\n                alt=\"file\"\n                className=\"pointer mr-8\"\n                onClick={setDatePicker}\n              />\n              <label className=\"mr-24 small\">{t('scheduleAgain')}</label>\n            </div>\n            <Modal open={datePickerOpen} onClose={setDatePicker}>\n              {datePicker}\n            </Modal>\n          </div>\n        </TableCell>\n      </TableRow>\n    </>\n  );\n};\n\nconst Campaigns = props => {\n  const { t } = useTranslation();\n  // returns the UI for Campaigns Table.\n\n  const getHeader = () => [`${t('date')}`, `${t('campaign')}`, `${t('view')}`, `${t('actions')}`];\n\n  const { campaigns = [], scheduleCampaign } = props;\n\n  return (\n    <>\n      <Table\n        rowsData={campaigns}\n        rowProps={{ scheduleCampaign }}\n        header={getHeader()}\n        tableHeaderCellClassName=\"header\"\n        customRow={CampaignRow}\n        tableHeaderSize=\"small\"\n      />\n    </>\n  );\n};\nexport default Campaigns;\n","import React from 'react';\nimport classnames from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport { isMobileDevice } from '../../common/utilities';\n\nconst LanguageSelector = () => {\n  // It gets the i18n instance inside the component.\n  const { i18n } = useTranslation();\n  const changeLanguage = event => {\n    i18n.changeLanguage(event.target.value);\n  };\n\n  // to check if mobile device.\n  const isMobile = isMobileDevice();\n\n  return (\n    <div onChange={changeLanguage} className={classnames('align-right', isMobile && 'mt-24', 'mr-8')}>\n      <input type=\"radio\" value=\"en\" name=\"language\" defaultChecked className=\"mr-8\" />\n      <label className=\"mr-24\">English</label>\n      <input type=\"radio\" value=\"gr\" name=\"language\" className=\"mr-8\" />\n      <label>German</label>\n    </div>\n  );\n};\n\nexport default LanguageSelector;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport classnames from 'classnames';\nimport Tabs from '../../common/Tabs';\nimport Campaigns from '../Campaigns';\nimport LanguageSelector from '../../common/LanguageSelector';\nimport { checkDateStatus, isMobileDevice } from '../../common/utilities';\nimport { LIVE, PAST, UPCOMING } from '../../constants';\n\nimport './styles/index.scss';\nconst Dashboard = props => {\n  const { t } = useTranslation();\n  const { campaigns = [], scheduleCampaign } = props;\n  const liveCampaigns = campaigns.filter(campaign => checkDateStatus(campaign.createdOn) === LIVE);\n  const pastCampaigns = campaigns.filter(campaign => checkDateStatus(campaign.createdOn) === PAST);\n  const upcomingCampaigns = campaigns.filter(campaign => checkDateStatus(campaign.createdOn) === UPCOMING);\n  // to check if mobile device.\n  const isMobile = isMobileDevice();\n  return (\n    <>\n      <div className=\"header-section\">\n        <img src=\"bluestacks-logo.png\" width=\"250\" alt=\"bluestacks-logo\" />\n      </div>\n      <LanguageSelector />\n      <div className=\"dashboard\">\n        <h1 className={classnames('header', isMobile && 'ml-24')}>{t('campaignTitle')}</h1>\n        <Tabs>\n          <div label=\"Upcoming Campaigns\" tabTitle={t('upcomingCampaigns')}>\n            <Campaigns campaigns={upcomingCampaigns} scheduleCampaign={scheduleCampaign} />\n          </div>\n          <div label=\"Live Campaigns\" tabTitle={t('liveCampaigns')}>\n            <Campaigns campaigns={liveCampaigns} scheduleCampaign={scheduleCampaign} />\n          </div>\n          <div label=\"Past Campaigns\" tabTitle={t('pastCampaigns')}>\n            <Campaigns campaigns={pastCampaigns} scheduleCampaign={scheduleCampaign} />\n          </div>\n        </Tabs>\n      </div>\n    </>\n  );\n};\nexport default Dashboard;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport apiConfig from '../../api.config';\nimport DashboardView from '../../components/Dashboard';\n\nconst Dashboard = () => {\n  const [campaigns, setCampaigns] = useState([]);\n  const [campaignsLoading, setCampaignsLoading] = useState(true);\n\n  const scheduleCampaign = (id, value) => {\n    let targetCampaignIndex = campaigns.findIndex(campaign => campaign.campaignId === id);\n    campaigns[targetCampaignIndex].createdOn = value;\n    const requestPayload = [...campaigns];\n\n    setCampaigns(requestPayload);\n  };\n\n  useEffect(() => {\n    const {\n      getCampaigns: { url: getCampaignsURL }\n    } = apiConfig;\n    axios\n      .get(getCampaignsURL)\n      .then(({ data }) => {\n        setCampaigns(data);\n        setCampaignsLoading(false);\n      })\n      .catch(error => console.log(error));\n  }, []);\n\n  return (\n    <div>\n      {campaignsLoading && (\n        <img src=\"loading-icon.gif\" alt=\"loading...\" style={{ position: 'absolute', top: '50%', left: '50%' }} />\n      )}\n      <div className=\"campaign-list\">\n        {!!campaigns && !!campaigns.length && (\n          <DashboardView campaigns={campaigns} scheduleCampaign={scheduleCampaign} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import { Route, Switch } from 'react-router-dom';\r\nimport React from 'react';\r\nimport Dashboard from '../containers/Dashboard';\r\nconst routes = (\r\n  <Switch>\r\n    <Route exact={true} path=\"/\" component={Dashboard} />\r\n  </Switch>\r\n);\r\n\r\nexport default routes;\r\n","import i18n from 'i18next';\n\nimport Backend from 'i18next-xhr-backend';\n\nimport { initReactI18next } from 'react-i18next';\n\ni18n\n\n  .use(Backend)\n\n  .use(initReactI18next)\n\n  .init({\n    lng: 'en', //default language\n\n    fallbackLng: 'en', //when specified language translations not present\n\n    //then fallbacklang translations loaded.\n\n    debug: true,\n\n    backend: {\n      /* translation file path */\n\n      loadPath: './assets/{{ns}}/{{lng}}.json'\n    },\n\n    /* can have multiple namespace, in case you want to divide a huge translation into smaller pieces and load them on demand */\n\n    ns: ['translations'],\n\n    defaultNS: 'translations',\n\n    keySeparator: false,\n\n    interpolation: {\n      escapeValue: false,\n\n      formatSeparator: ','\n    },\n\n    react: {\n      wait: true\n    }\n  });\n\nexport default i18n;\n","import React, { Component, Suspense } from 'react';\n\n// import route Components here\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport routes from './routes/routing';\nimport { createBrowserHistory } from 'history';\nimport './i18n';\nimport './common/utilities.scss';\n\nconst history = createBrowserHistory();\n\nclass App extends Component {\n  render() {\n    return (\n      <Suspense fallback={null}>\n        <Router history={history}>{routes}</Router>\n      </Suspense>\n    );\n  }\n}\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (response.status === 404 || response.headers.get('content-type').indexOf('javascript') === -1) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}